<?xml version="1.0" encoding="UTF-8"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="art.sbp.suma.life"
    xml:lang="en">
    <info>
        <title>SUSE Best Practices</title>
        <subtitle>Advanced Patch Lifecycle Management with SUSE Manager: Methods and approaches for
            managing updates using SUSE Manager in multi-landscape environments</subtitle>
        <productname>SUSE Manager</productname>
        <productnumber>2.1</productnumber>
        <author>
            <personname>Jeff Price, Principal Architect, SUSE</personname>
        </author>
    </info>

    <sect1 xml:id="sec.overview">

        <title>Overview</title>

        <para>For many organizations today, keeping systems patched and secure is one of the biggest
            ongoing challenges that systems administrators can face. Both proprietary and open
            source software companies are constantly at work providing updates that fix flaws
            discovered in their software products.</para>

        <para>Adding to the pressures are the requirements imposed by compliance initiatives like
            PCI-DSS (Payment Card Industry Data Security Standard), SOX (Sarbanes-Oxley), HIPAA
            (Health Insurance Portability and Accountability Act), FIPS 140 (Federal Information
            Processing Standard), etc.. Included in most of these <quote>standards</quote> are rules that dictate
            the frequency or time-frames for patching and often these schedules are modified because
            of the severity level of a specific patch.</para>

        <para>Businesses large and small are depending on an ever-changing landscape of applications
            on a wide-range of compute infrastructure. These can include physical and virtual hosts
            and may have complicated application stacks. These applications may have specific kernel
            version dependencies, have strict uptime requirements or be tied to a specific runtime
            environment (like java). They may only be certified on a specific Linux OS release, or
            have a particular set of configuration requirements. There might be extra hardening or
            platform requirements that set these hosts apart from the rest.</para>

        <para>Additionally, many companies have created duplicate host environments like
            <quote>development</quote> or <quote>QA</quote> landscapes that mirror <quote>production</quote> to allow for testing or
            validation of changes. This means at least one more complete set of hosts to manage,
            patch and report on. This increases the challenges of meeting a rigorous patch schedule
            that often requires patching all hosts on a quarterly basis (or more frequently for
            critical vulnerabilities).</para>

        <para>Is there any way to address all of the issues and regain the control of a complicated
            enterprise Linux environment?</para>

        <sect2 xml:id="sec.susesol">
            <title>A SUSE Solution</title>

            <para>SUSE Manager delivers best-in-class Linux server management features like
                automated software management, system provisioning and monitoring. It provides a
                unified Linux management infrastructure by standardizing and automating server
                patching and management. These tasks can be performed faster and with fewer errors,
                which improves IT staff productivity while reducing server downtime.</para>

            <sect3 xml:id="sec.defin">
                <title>Definitions</title>

                <para>This document uses the word landscape to describe one of several groups of
                    Linux hosts. This is commonly used with enterprise software deployments as a way
                    to define the role/quality of a host. Examples include, production (PROD),
                    development (DEV), quality-assurance (QA), user-acceptance/testing (UAT),
                    etc.</para>

                <para>The word environment is also used. In this document, environment is defined as
                    a physical separation of Linux hosts, like Corporate (CORP), or Store (STORE),
                    or NPE (Non-Production Environment).</para>
                <para>Lastly, the word <emphasis role="bold"
                        >Organization</emphasis> is used. SUSE Manager has a concept of
                    organizations and defines them as a separate management environment placed under
                    the default organization that is created during initial installation of a SUSE
                    Manager Server. This is a single parent (like an LDAP <quote>O</quote>) with many child
                    placements (like an LDAP <quote>OU</quote> - restricted to a flat OU structure with no
                    nesting). Organizations in SUSE Manager will typically have separate credentials
                    required to administer them via the Web UI - and any Linux hosts managed by SUSE
                    Manager will be registered into a single organization and only visible there.
                    Keep these definitions in mind as you read.</para>
            </sect3>
        </sect2>

        <sect2 xml:id="sec.example">
            <title>Example Scenario</title>

            <para>The Chameleon Corporation is the world’s largest reptile and amphibian pet store,
                and has its headquarters in Yemen. It has more than 1500 stores operating under the
                names LizardsRUs, UnVeiledInc and Chameleo-rama in five different countries.</para>

            <para>The Chameleon Corporation has the following requirements for managing patch and
                security updates to their Linux hosts. because of compliance constraints, their
                patch lifecycle (the timing and delivery) is based on their corporate security
                policies, the host environments/landscapes, and their future management needs. Here
                is a high-level summary of the requirements:</para>

            <orderedlist>
                <listitem>
                    <para>The published Security Policy states the need to patch all Linux systems
                        with the latest available updates, bug-fixes and enhancements on a quarterly
                        basis. The quarters are defined as Q1: January 1st through March 31st, Q2:
                        April 1st through June 30th, Q3: July 1st through September 30 th, and Q4:
                        October 1st through December 31st.</para>
                </listitem>
                <listitem>
                    <para>The published Security Policy also states the need to patch all Linux
                        systems with <quote>critical</quote> security updates (CVSS score of 7 or greater) within
                        1 month of release of the patch. This introduces a second schedule that may
                        overlap any existing patch rollout.</para>
                </listitem>
                <listitem>
                    <para>The company has 3 different host environments, Corporate, Store and NPE -
                        these are partitioned using SUSE Manager Organizations. Each SUSE Manager
                        Organization has visibility into the default SUSE Manager Organization’s
                        software channels because of trusts, yet the managed hosts are naturally
                        grouped and managed by their environment.</para>
                </listitem>
                <listitem>
                    <para>There are at least 3 landscapes in each environment, DEV, UAT and PROD.
                        There are additional landscapes for some environments (for example SIT, DIT,
                        etc.) but these are handled similarly to the aforementioned landscapes.
                        Patch lifecycle promotion simply accounts for moving patches into additional
                        stages as needed.</para>
                </listitem>
                <listitem>
                    <para>A <quote>patch exceptions</quote> process exists, as there is often a need
                        to account for the removal of patches (for example kernel updates) from a
                        rollout. Some hosts might have hardware drivers or 3 rd party software that
                        depends on specific kernel versions. This exception process would be handled
                        on a case-by-case basis.</para>
                </listitem>
            </orderedlist>
            <para>In summary, these requirements highlight the need for 2 patch schedules, across 3
                (or more) landscapes, in 3 SUSE Manager Organizations, with a way to handle a
                storage location for patches that cannot be rolled out (exceptions), yet need to be
                tracked, remediated and reintroduced to ensure compliance.</para>
            <para>SUSE Manager can handle these complexities very well and can be set up to allow
                flexible delivery of these requirements. Automation can even be applied to assist
                with some facets, and procedures can be developed to ensure the consistent delivery
                of patches that meet the published company policies.</para>
        </sect2>
        <sect2 xml:id="sec.features">
            <title>Features</title>
            <para>This document describes how to setup and configure a SUSE Manager implementation
                to enable companies in the delivery of these often requested features:</para>
            <itemizedlist>
                <listitem>
                    <para>Automatic creation and archive of patch sets by quarter (or any other time
                        period)</para>
                </listitem>
                <listitem>
                    <para>A consistent method of patch promotion and delivery through numerous
                        landscapes and environments</para>
                </listitem>
                <listitem>
                    <para>An exception process for handling patches that need to be excluded from a
                        patch cycle</para>
                </listitem>
                <listitem>
                    <para>Environment creation with historical patch sets</para>
                </listitem>
                <listitem>
                    <para>Minimal need for host channel subscription manipulation from
                        cradle-to-grave</para>
                </listitem>
                <listitem>
                    <para>Support for service-pack migration with custom child channels</para>
                </listitem>
            </itemizedlist>
            <para>Many of these features can be tuned to meet a change in requirements, like an
                increase in, or a reduction of, the number of landscapes (DEV and PROD or Sandbox,
                DEV, QA, UAT, PRE-PROD, PROD, etc.), or a more, or less frequent delivery calendar.
                Keep this in mind as you read. SUSE Manager is a very flexible product that has
                helped many customers create and deploy solid systems and patch management
                framework. Your requirements may differ from the ones described here, but the
                flexibility of SUSE Manager enables you to meet your ongoing and changing
                needs.</para>
        </sect2>
        <sect2 xml:id="sec.guidance">
            <title>Guidance</title>
            <para>This guide is based on SUSE Manager 2.1. A fresh installation is not necessary,
                but some assumption is made that you have a working SUSE Manager environment, with
                some registered hosts, and a decent knowledge of the terms and capabilities. The
                SUSE Manager documentation is an excellent source of information that is often
                updated. Please refer to the documentation for clarification of any process that
                seems confusing. Many of the implementation steps detailed in this document are
                enhanced examples based on procedures, capabilities or step-by-step “how-tos” in our
                product documentation.</para>
            <note>
                <title>Test Your Implementation</title>
                <para>Some advanced features (like using the spacecmd or the XMLRPC API) will be
                    explained in more detail, but may not be exhaustive. We will include some code
                    examples in the Appendix that can be used as-is, or modified to suit your
                    particular environments or needs. However, these come with NO WARRANTY, and
                    should not be expected to be perfect for any given implementation. ALWAYS TEST
                    your particular implementation before any production usage.</para>
            </note>
            <para>The next section will describe the setup of SUSE Manager to meet the requirements
                defined in the SCENARIO section. We will start with a description of the
                architecture (and components) developed to meet the requirements, and then proceed
                with steps to create it yourself. Each component within this guide is used together
                with the others to deliver a comprehensive solution in the specific scenario
                described herein, but might be used individually to help you meet your own solution
                requirements.</para>
        </sect2>
    </sect1>
    <sect1 xml:id="sec.implement">
        <title>Implementation</title>
        <para>Let’s review. We need to setup SUSE Manager and create a set of procedures, processes
            and/or tools (scripts) to help us with our patch lifecycle management. This will include
            the creation (and optimally an <quote>automatic</quote> creation) of patch archive channels from the
            SUSE provided <quote>updates</quote> channels for the versions of SUSE Linux Enterprise Server we
            use. These patch archives will be the sources for our patch promotions, but can also be
            a source to setup testing environments based on a patch set rolled out in the past. This
            could be used to troubleshoot an error condition for example, by creating a lab full of
            hosts patched up to any previous patch set. We can also demonstrate and visualize a
            clear view of compliance defined by a time-stamped set of patches.</para>
        <para>We also need to create a set of software channels that will get our updates when we
            decide to roll them out. Each landscape needs to receive them from the previous
            <quote>validated</quote> landscape ONLY. Meaning they will first get put into DEV, tested on the
            machines there - then move into QA, get tested - and finally get moved into PROD. The
            whole thing will start over every quarter, and we will handle exceptions if/when they
            occur. Every exception will be tracked by another established process with the constant
            goal of remediating any exception and making sure the patch is reintroduced as quickly
            as possible in order to ensure our clear view of compliance.</para>
        <para>Other interruptions to a quarterly rollout might be the release of a <quote>critical</quote>
            security patch that needs to be deployed more rapidly than once-a-quarter. In order to
            handle this extra schedule, we should create an addition channel for any critical
            patches to track them and their roll-out. Critical patches should be considered any CVE
            that has a CVSS score of 7.1 or greater, or otherwise be mandated by our corporate
            security organization. We have 2 different SUSE Linux Enterprise Server versions that we
            currently manage, SUSE Linux Enterprise Server 11 SP3 and SUSE Linux Enterprise Server
            12. We would like to plan for using SUSE Manager to assist with service pack migrations,
            so setting up to account for SUSE Linux Enterprise Server 11 SP4 initially would be
            ideal. We also maintain both 32-bit and 64-bit Intel/AMD architecture versions of SUSE
            Linux Enterprise Server 11 SP3 so we will need to account for both of them.</para>
        <para>There are 2 different environments we need to manage, Corporate (CORP) and Store
            (STORE). We have created separate SUSE Manager Organizations to allow our systems
            administrators an exclusive view of the hosts they are responsible for. Each SUSE
            Manager Organization has the 3 landscapes (DEV, QA and PROD) that they use for patch
            testing/promotion.</para>
        <para>Activation keys and bootstraps should be created for each SUSE Manager Organization
            (each environment) and each landscape so that hosts can be registered into their
            appropriate, and most likely, permanent role. For example, a bootstrap script will
            register a SLES 11 SP3 (64bit) DEV host into the correct organization and will add the
            appropriate base and child channels that should never have to be manipulated again.
            Automation is preferred. As mentioned, the use of scripts or scheduled jobs would
            greatly enhance the solution and provide relief to our administration staff.</para>
        <sect2 xml:id="sec.arch">
            <title>Architecture</title>
            <para>Here is a high-level outline of the architecture and channels:</para>
            <note>
                <title/>
                <para>For any <literal>Base</literal> channel listed here - this can be a clone tree
                    of the SUSE vendor channels - as such it would include a
                        <literal>prefix-</literal> in the name. This can aid the handling of service
                    pack migrations described in the channel creation sections that follow.</para>
            </note>
            <itemizedlist>
                <listitem>
                    <para>SUSE Manager Organization</para>
                    <itemizedlist>
                        <listitem>
                            <para>Default (Main) - 1</para>
                            <itemizedlist>
                                <listitem>
                                    <para>32 Bit Archive Channels (Public)</para>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Q2 - 06-30-2015 - SLES 11 SP3 Updates for
                                                i586</para>
                                        </listitem>
                                        <listitem>
                                            <para>Q3 - 09-30-2015 - SLES 11 SP3 Updates for
                                                i586</para>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>64 Bit Archive Channels (Public)</para>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Q2 - 06-30-2015 - SLES 11 SP3 Updates for
                                                x86_64</para>
                                        </listitem>
                                        <listitem>
                                            <para>Q3 - 09-30-2015 - SLES 11 SP3 Updates for
                                                x86_64</para>
                                        </listitem>
                                        <listitem>
                                            <para>Q2 - 06-30-2015 - SLES 12 Updates for
                                                x86_64</para>
                                        </listitem>
                                        <listitem>
                                            <para>Q3 - 09-30-2015 - SLES 12 Updates for
                                                x86_64</para>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>Clone Sets or Child Channels within SUSE Base
                                        Channels</para>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>Base : SLES 11 SP3 Pool for i586</para>
                                    <itemizedlist>
                                        <listitem>
                                            <para>DEV - Current Patch Set - SLES 11 SP3 Updates for
                                                i586</para>
                                        </listitem>
                                        <listitem>
                                            <para>QA - Current Patch Set - SLES 11 SP3 Updates for
                                                i586</para>
                                        </listitem>
                                        <listitem>
                                            <para>PROD - Current Patch Set - SLES 11 SP3 Updates for
                                                i586</para>
                                        </listitem>
                                        <listitem>
                                            <para>Patch Exceptions (DO NOT SUBSCRIBE) - SLES 11 SP3
                                                i586</para>
                                        </listitem>
                                        <listitem>
                                            <para>Security ASAP Exceptions - SLES 11 SP3 i586</para>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>Base : SLES 11 SP3 Pool for x86_64</para>
                                    <itemizedlist>
                                        <listitem>
                                            <para>DEV - Current Patch Set - SLES 11 SP3 Updates for
                                                x86_64</para>
                                        </listitem>
                                        <listitem>
                                            <para>QA - Current Patch Set - SLES 11 SP3 Updates for
                                                x86_64</para>
                                        </listitem>
                                        <listitem>
                                            <para>PROD - Current Patch Set - SLES 11 SP3 Updates for
                                                x86_64</para>
                                        </listitem>
                                        <listitem>
                                            <para>Patch Exceptions (DO NOT SUBSCRIBE) - SLES 11 SP3
                                                x86_64</para>
                                        </listitem>
                                        <listitem>
                                            <para>Security ASAP Exceptions - SLES 11 SP3
                                                x86_64</para>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>Base : SLES 12 SP3 Pool for x86_64</para>
                                    <itemizedlist>
                                        <listitem>
                                            <para>DEV - Current Patch Set - SLES 12 Updates for
                                                x86_64</para>
                                        </listitem>
                                        <listitem>
                                            <para>QA - Current Patch Set - SLES 12 Updates for
                                                x86_64</para>
                                        </listitem>
                                        <listitem>
                                            <para>PROD - Current Patch Set - SLES 12 Updates for
                                                x86_64</para>
                                        </listitem>
                                        <listitem>
                                            <para>Patch Exceptions (DO NOT SUBSCRIBE) - SLES 12
                                                x86_64</para>
                                        </listitem>
                                        <listitem>
                                            <para>Security ASAP Exceptions - SLES 12 x86_64</para>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>Patch Exceptions Channels (as above)</para>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Per Base Channel - 1 channel for each <quote>Updates</quote>
                                                channel:</para>
                                            <itemizedlist>
                                                <listitem>
                                                  <para>Examples:</para>
                                                  <itemizedlist>
                                                  <listitem>
                                                  <para>Patch Exceptions (DO NOT SUBSCRIBE) - SLES
                                                  11 SP3 i586</para>
                                                  </listitem>
                                                  <listitem>
                                                  <para>Security ASAP Exceptions - SLES 11 SP3
                                                  i586</para>
                                                  </listitem>
                                                  </itemizedlist>
                                                </listitem>
                                            </itemizedlist>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                    </itemizedlist>
                    <itemizedlist>
                        <listitem>
                            <para>Corporate (CORP) - 2</para>
                            <itemizedlist>
                                <listitem>
                                    <para>Any public channel will be visible here</para>
                                </listitem>
                                <listitem>
                                    <para>Private channels can be shared per-organization</para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                    </itemizedlist>
                    <itemizedlist>
                        <listitem>
                            <para>Store (STORE) - 3</para>
                            <itemizedlist>
                                <listitem>
                                    <para>Any public channel will be visible here</para>
                                </listitem>
                                <listitem>
                                    <para>Private channels can be shared per-organization</para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </itemizedlist>

        </sect2>

        <sect2 xml:id="sec.design">
            <title>Automation and Process Design</title>

            <para>Automation will include automatic channel clone creation for the Archive channels.
                To best suit a particular company’s use-cases and product usage, a combination of
                scripts (cron and bash) and a configuration file will be used. The archive creation
                will be triggered by a custom cron job as follows. Criteria for dates will determine
                the exact setup. For example, a quarterly schedule could be implemented based on the
                first or last day of a given quarter. If the trigger time is the END of a quarter,
                it would have to consider day 30 on the 3 rd and 9 th months of a calendar (March
                and September), and day 31 on the 6 th and 12 th months (June and December). This
                will require 2 crontab entries such as (cron syntax):</para>


            <para>
                <computeroutput>0 0 30 6,9 * /path/to/archive-create-script</computeroutput>
            </para>

            <para>
                <computeroutput>00 0 31 3,12 * /path/to/archive-create-script</computeroutput>
            </para>



            <para> If the trigger for the quarter is going to happen on the 1 st of a month, then
                only one crontab entry would be required, for example:</para>

            <para>
                <computeroutput>0 0 1 1,4,7,10 * /path/to/archive-create-script</computeroutput>
            </para>

            <para>The actual “archive-create-script” will also need logic in it to determine the
                quarter it was run and formatting logic to provide the correct syntax for SUSE
                Manager channel cloning, etc. The script should also loop through each architecture
                and SLES version in order to make a full set of archives based on the company’s
                choices. Processes for patch promotion will be created so that administrators can
                precisely and explicitly define when a patch set is moved INTO a given landscape,
                and just as importantly - from WHERE. The easiest method to do this is using a
                script that leverages the XMLRPC API exposed in SUSE Manager. The API contains a
                softwareChannel method called mergePackages and mergeErrata. These two methods can
                be called with a source channel and target channel to quickly take content from one
                channel and merge the differences into another.</para>
            <para>The last process will define a workflow for removing a patch from the promotion
                process - and making sure it is stored to be tracked. These patch exceptions can
                later be reintroduced to a patch rollout calendar as the reason for the exception is
                remediated. In addition to the exception process of REMOVING a patch, there is a
                similar process for ADDING a patch as an emergency dictates.</para>
            <para>Emergency patches will likely always be available in the current SUSE Updates
                channels, but might not have been introduced into an Archive channel yet. As the
                quarterly archive channel creation job is triggered, any available patches would be
                part of an archive set - but for a given point in time, this might have occurred
                before the patch was released - or it may be up to 3 months until a new archive is
                created that contains this recent patch. A method for searching and then copying a
                patch into a target channel will need to be created. This will handle those times
                when a critical patch is released by SUSE but your archive channel will not get a
                copy until the quarter is up.</para>
            <para>Emergency patches will likely always be available in the current SUSE Updates
                channels, but might not have been introduced into an Archive channel yet. As the
                quarterly archive channel creation job is triggered, any available patches would be
                part of an archive set - but for a given point in time, this might have occurred
                before the patch was released - or it may be up to 3 months until a new archive is
                created that contains this recent patch. A method for searching and then copying a
                patch into a target channel will need to be created. This will handle those times
                when a critical patch is released by SUSE but your archive channel will not get a
                copy until the quarter is up.</para>
            <para>Copying these emergency patches into place does not affect the normal deployments
                or creation of archive channels. The next archive channel creation will also contain
                this patch, and the use of an emergency patch channel with a duplicate patch (in the
                case of merging the same patch later) will not cause any conflicts with a system
                that already has installed it.</para>
            <para>Further explanation can be found below in the Exception and Escalation Channels
                section.</para>
        </sect2>
        <sect2 xml:id="sec.patchpromo">
            <title>PATCH PROMOTION CYCLE</title>
            <para>Understanding how patches (and the packages they include) are obtained from SUSE,
                where they go after download, and how they are arranged within SUSE Manager is key
                to setting up the Advanced Patch Lifecycle system. By default, SUSE Manager arranges
                its channel sets by a particular version and architecture of SUSE Linux Enterprise
                Server and its add-ons or extensions.</para>
            <para>For example, a base set of channels within SUSE Manager for SLES 11 SP3 x86_64
                includes the parent or base channel called a <quote>pool</quote> channel. This channel contains
                packages that are the functional equivalent of the installation DVD for SLES 11 SP3
                64-bit. Under this pool channel are all of the <quote>child</quote> channels which include a
                channel for the SUSE Manager Client packages, called SUSE Manager Tools channel, and
                an updates channel called in this case, SLES 11 SP3 Updates for x86_64.</para>
            <para>A normal set of channels that a managed host subscribes to will include at least a
                parent channel (pool), a SUSE Manager Tools channel, and an Updates channel. In some
                cases like SLES 11 SP2 - this will include the SLES 11 SP1 Pool, the SP1 Updates
                channel, the SP2 Core channel, SP2 Updates, SP2 Extension Store and the SP2 SUSE
                Manager Tools channel.</para>
            <note>
                <title>LTSS for SLES SP1 and SP2</title>
                <para>Due to SP1 and SP2 both being in their LTSS (Long Term Service and Support)
                    phase, there are no longer any non-LTSS updates being created from SUSE. This
                    means that any SP1 or SP2 hosts a company might have will need to purchase LTSS
                    and use LTSS Updates channels in order to receive further patches and support.
                    Visit <link xlink:href="http://www.suse.com/lifecycle"/> for more
                    information.</para>
            </note>
            <para>Here is a graphic that illustrates the patch promotion process:</para>
            <figure>
                <title>Patch Promotion Process</title>
                <mediaobject>
                    <imageobject role="fo">
                        <imagedata fileref="/process-flow.png" width="95%" format="PNG"/>
                    </imageobject>
                    <imageobject role="html">
                        <imagedata fileref="/process-flow.png" width="90%" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </sect2>
        <sect2 xml:id="sec.exception">
            <title>Exception and Escalation Channels</title>
            <para>There might be several reasons to delay or remove a patch from a deployment cycle.
                A patch could be causing issues with the stability of a system or systems, it might
                not have passed a testing cycle from the current or previous landscape, or there
                could be some other reason not to deploy it within a patch cycle. On the other hand,
                there might be a reason to deploy a critical patch (one that patches a security
                vulnerability or a debilitating bug) ahead of schedule. Due to the critical nature
                of the patch it needs to go through testing and deployment as fast as possible -
                without waiting for the next quarterly patch cycle.</para>
            <para>In order to handle the periodic removal or addition of these exception patches,
                processes should be created to track them appropriately. While these exceptions are
                being tracked, they will be copied into their own channel containers for
                safe-keeping, accounting and reporting.</para>
            <para>These channels can be created within the Archive base channel or within the cloned
                base channel for the version of SLES that corresponds to the patch exception
                (recommended).</para>
            <para>The process for excluding a patch will be to first copy the patch (and associated
                packages) into the Exception Channel, and then to remove the patch (and associated
                packages) from the current deployment landscape. Optionally it can be removed from
                the current quarter’s archive channel but it is important to realize that the patch
                will be included in the following quarter’s archive as well. It might be tempting to
                remove it from the SUSE Updates channel, but this can often lead to a mishandling or
                misreporting of compliance. It is much better to track and resolve the reasons for
                the exception in the first place. This way, the patch can be reintroduced to the
                patch deployment workflow and remediate any potential security issues or code flaws
                that the patch was created to fix.</para>
            <sect3>
                <title>Security Escalation Channel and Process Definition</title>
                <para>The process for adding a security patch is similar to the process of excluding
                    one. The key difference is that the patch needs to be copied into the Security
                    Exception Channel from either the SUSE Updates channel or the latest archive if
                    it has been created but not used for a promotion cycle yet. Assuming that this
                    new critical security patch has been released in the middle of a rollout phase
                    (you have already been promoting the current quarter’s patches and this new one
                    comes out), it is likely that this new patch has not yet appeared in an
                    archive.</para>
                <para>Another assumption is the need to test this new patch by promoting it through
                    the landscapes as any normal patch set, but if necessary it can be copied
                    directly to any stage. Simply copy this security patch into the initial
                    landscape (e.g. DEV - Current) and follow the normal deploy-test-promote cycles
                    to get it into production. Depending on the critical nature of the patch, the
                    normal schedule for testing could be accelerated or in rare cases bypassed
                    altogether assuming acceptable risk.</para>
            </sect3>
        </sect2>
        <sect2 xml:id="sec.components">
            <title>Components</title>
            <para>Here is a list of things we will create to enable Advanced Patch Lifecycle
                Management using SUSE Manager 2.1 : </para>
            <bridgehead>Channels</bridgehead>
            <orderedlist>
                <listitem>
                    <para>Archive Channels</para>
                </listitem>
                <listitem>
                    <para>Current Updates Channels</para>
                </listitem>
                <listitem>
                    <para>Exception Channels (Patch Exclude or Security-ASAP)</para>
                </listitem>
                <listitem>
                    <para>Optional SP-Migration Clone Set</para>
                </listitem>
            </orderedlist>

            <bridgehead>Activation Keys / Bootstraps</bridgehead>

            <orderedlist>
                <listitem>
                    <para>Per-Organization/Per-SLES version Activation Keys</para>
                </listitem>
                <listitem>
                    <para>Per-Org/Per-SLES version Registration Bootstrap</para>
                </listitem>
            </orderedlist>

            <bridgehead>Scripts</bridgehead>

            <orderedlist>
                <listitem>
                    <para>Archive Creation Script</para>
                </listitem>
                <listitem>
                    <para>Archive Sources List Control File</para>
                </listitem>
                <listitem>
                    <para>Merge Tool python script</para>
                </listitem>
            </orderedlist>
            <bridgehead>Crontab Entries / Automation</bridgehead>
            <orderedlist>
                <listitem>
                    <para>Quarterly (or other frequency) archive creation call</para>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 xml:id="sec.channels">
            <title>Channels</title>
            <para>As described in the architecture section above, several custom channels will be
                created to support the patch promotion process. These channels will store the
                archives (created as clones of the SUSE Updates channels) and they will also store
                the exception patches. For each landscape a custom channel will be created to hold
                patches that have been promoted. These channels will contain more and more content
                over time as patches are promoted each cycle.</para>
            <para>For example, during Quarter 1 (Q1) the archive channel contains 159 patches, and
                these are merged into the DEV updates channel for SLES 11 SP4. As SUSE releases
                patches in an ongoing fashion, when the next Quarter’s archive is created, Q2 for
                this example - it contains all of the Q1 patches and an additional 130 patches for a
                total of 289. The merge function will take the 130 new patches (and associated
                packages) and add them to the DEV updates channel during the next patch
                cycle.</para>
            <para>Each new patch cycle updates the available patches in a given landscape’s <quote>current
                updates</quote> channel. In this way each subsequent patch promotion adds the new updates
                and these can be applied to any hosts subscribed to the channel.</para>
            <para>The exception channels will be populated by managing individual patches, copying
                them from one of the landscape updates channels or from one of the archive channels.
                Once a patch is copied successfully into an exception channel, it can be removed
                from an updates channel or an archive.</para>
            <sect3 xml:id="sec.creatingchan">
                <title>CREATING THE CHANNELS</title>
                <bridgehead>Archive Channels:</bridgehead>
                <para>Custom channels are created in SUSE Manager as <quote>new</quote>, blank and empty
                    channels, or <quote>clones</quote>. Technically, cloned channels can also be created as
                    empty, but in this case we will create the archive channels with content sourced
                    from the SUSE Updates channel, the patches AND the packages they reference. Each
                    archive channel will reside within an empty base channel. Base channels will be
                    created for each processor architecture managed by SUSE Manager, for example,
                    IA-32, x86_64, s390x, PPC, etc.. Multiple archives matching the different
                    versions of SLES can exist in the base channel, but they will all be the same
                    processor architecture.</para>
                <formalpara>
                    <title>Create the base archive channels:</title>
                    <para>For each processor architecture used by the hosts that SUSE Manager
                        manages, create empty channels named <quote>32 Bit Archives Channel</quote> and <quote>64 Bit
                        Archives Channel</quote>:</para>
                </formalpara>
                <orderedlist>
                    <listitem>
                        <para/>
                    </listitem>
                </orderedlist>
            </sect3>
        </sect2>
    </sect1>
</article>
