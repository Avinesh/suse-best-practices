<?xml version="1.0" encoding="UTF-8"?>
<article xmlns="http://docbook.org/ns/docbook" version="5.0">
    <info>
        <title>SUSE Best Practices</title>
        <subtitle>Advanced Patch Lifecycle Management with SUSE
            Manager: Methods and approaches for managing updates using
            SUSE Manager in multi-landscape environments</subtitle>
        <productname>SUSE Manager</productname>
        <productnumber>2.1</productnumber>
        <author>
            <personname>Jeff Price, Principal Architect, SUSE</personname>
        </author>
    </info>

    <sect1>
        <title>Overview</title>

        <para>For many organizations today, keeping systems patched and
            secure is one of the biggest ongoing challenges that systems
            administrators can face. Both proprietary and open source
            software companies are constantly at work providing updates
            that fix flaws discovered in their software products.</para>

        <para>Adding to the pressures are the requirements imposed by
            compliance initiatives like PCI-DSS (Payment Card Industry Data
            Security Standard), SOX (Sarbanes-Oxley), HIPAA (Health
            Insurance Portability and Accountability Act), FIPS 140
            (Federal Information Processing Standard), etc.. Included in
            most of these “standards” are rules that dictate the frequency
            or time-frames for patching and often these schedules are
            modified because of the severity level of a specific patch.</para>

        <para>Businesses large and small are depending on an ever-changing
            landscape of applications on a wide-range of compute
            infrastructure. These can include physical and virtual hosts
            and may have complicated application stacks. These applications
            may have specific kernel version dependencies, have strict
            uptime requirements or be tied to a specific runtime
            environment (like java). They may only be certified on a
            specific Linux OS release, or have a particular set of
            configuration requirements. There might be extra hardening or
            platform requirements that set these hosts apart from the
            rest.</para>
        
        <para>Additionally, many companies have created duplicate host
            environments like “development” or “QA” landscapes that mirror
            “production” to allow for testing or validation of
            changes. This means at least one more complete set of hosts to
            manage, patch and report on. This increases the challenges of
            meeting a rigorous patch schedule that often requires
            patching all hosts on a quarterly basis (or more frequently for
            critical vulnerabilities).</para>

        <para>Is there any way to address all of the issues and regain the
            control of a complicated enterprise Linux environment?</para>

        <sect2>
            <title>A SUSE Solution</title>

            <para>SUSE Manager delivers best-in-class Linux server
                management features like automated software management,
                system provisioning and monitoring. It provides a unified
                Linux management infrastructure by standardizing and
                automating server patching and management. These tasks can
                be performed faster and with fewer errors, which improves
                IT staff productivity while reducing server
                downtime.</para>

            <sect3>
                <title>Definitions</title>

                <para>This document uses the word landscape to describe one
                    of several groups of Linux hosts. This is commonly used
                    with enterprise software deployments as a way to define
                    the role/quality of a host. Examples include,
                    production (PROD), development (DEV), quality-assurance
                    (QA), user-acceptance/testing (UAT), etc.</para>

                <para>The word environment is also used. In this document,
                    environment is defined as a physical separation of
                    Linux hosts, like Corporate (CORP), or Store (STORE),
                    or NPE (Non-Production Environment).</para>

                <para>Lastly, the word Organization is used. SUSE Manager
                    has a concept of organizations and defines them as a
                    separate management environment placed under the
                    default organization that is created during initial
                    installation of a SUSE Manager Server. This is a single
                    parent (like an LDAP “O”) with many child placements
                    (like an LDAP “OU” - restricted to a flat OU structure
                    with no nesting). Organizations in SUSE Manager will
                    typically have separate credentials required to
                    administer them via the Web UI - and any Linux hosts
                    managed by SUSE Manager will be registered into a
                    single organization and only visible there. Keep these
                    definitions in mind as you read.</para>
            </sect3>
        </sect2>

        <sect2>
            <title>Example Scenario</title>

            <para>The Chameleon Corporation is the world’s largest reptile
                and amphibian pet store, and has its headquarters in Yemen.
                It has more than 1500 stores operating under the names
                LizardsRUs, UnVeiledInc and Chameleo-rama in five different
                countries.</para>

            <para>The Chameleon Corporation has the following requirements
                for managing patch and security updates to their Linux
                hosts. because of compliance constraints, their patch lifecycle
                (the timing and delivery) is based on their corporate
                security policies, the host environments/landscapes, and
                their future management needs. Here is a high-level summary
                of the requirements:</para>

            <orderedlist>
                <listitem>
                    <para>The published Security Policy states the need to
                        patch all Linux systems with the latest available
                        updates, bug-fixes and enhancements on a quarterly
                        basis. The quarters are defined as Q1: January 1st
                        through March 31st, Q2: April 1st through June
                        30th, Q3: July 1st through September 30 th, and Q4:
                        October 1st through December 31st.</para>
                </listitem>
                <listitem>
                    <para>The published Security Policy also states the
                        need to patch all Linux systems with “critical”
                        security updates (CVSS score of 7 or greater)
                        within 1 month of release of the patch. This
                        introduces a second schedule that may overlap any
                        existing patch rollout.</para>
                </listitem>
                <listitem>
                    <para>The company has 3 different host environments,
                        Corporate, Store and NPE - these are partitioned
                        using SUSE Manager Organizations. Each SUSE Manager
                        Organization has visibility into the default SUSE
                        Manager Organization’s software channels because of
                        trusts, yet the managed hosts are naturally grouped
                        and managed by their environment.</para>
                </listitem>
                <listitem>
                    <para>There are at least 3 landscapes in each
                        environment, DEV, UAT and PROD. There are
                        additional landscapes for some environments (for example
                        SIT, DIT, etc.) but these are handled similarly to
                        the aforementioned landscapes. Patch lifecycle
                        promotion simply accounts for moving patches into
                        additional stages as needed.</para>
                </listitem>
                <listitem>
                    <para>A “patch exceptions” process exists, as there is
                        often a need to account for the removal of patches
                        (for example kernel updates) from a rollout. Some hosts
                        might have hardware drivers or 3 rd party software
                        that depends on specific kernel versions. This
                        exception process would be handled on a
                        case-by-case basis.</para>
                </listitem>
            </orderedlist>

            <para>In summary, these requirements highlight the need for 2
                patch schedules, across 3 (or more) landscapes, in 3 SUSE
                Manager Organizations, with a way to handle a storage
                location for patches that cannot be rolled out (exceptions),
                yet need to be tracked, remediated and reintroduced to
                ensure compliance.</para>

            <para>SUSE Manager can handle these complexities very well and
                can be set up to allow flexible delivery of these
                requirements. Automation can even be applied to assist with
                some facets, and procedures can be developed to ensure the
                consistent delivery of patches that meet the published
                company policies.</para>

        </sect2>

        <sect2>
            <title>Features</title>

            <para>This document describes how to setup and configure a SUSE
                Manager implementation to enable companies in the delivery
                of these often requested features:</para>

            <itemizedlist>
                <listitem>
                    <para>Automatic creation and archive of patch sets by
                        quarter (or any other time period)</para>
                </listitem>
                <listitem>
                    <para>A consistent method of patch promotion and
                        delivery through numerous landscapes and
                        environments</para>
                </listitem>
                <listitem>
                    <para>An exception process for handling patches that
                        need to be excluded from a patch cycle</para>
                </listitem>
                <listitem>
                    <para>Environment creation with historical patch
                        sets</para>
                </listitem>
                <listitem>
                    <para>Minimal need for host channel subscription
                        manipulation from cradle-to-grave</para>
                </listitem>
                <listitem>
                    <para>Support for service-pack migration with custom
                        child channels</para>
                </listitem>
            </itemizedlist>

            <para>Many of these features can be tuned to meet a change in
                requirements, like an increase in, or a reduction of, the
                number of landscapes (DEV and PROD or Sandbox, DEV, QA,
                UAT, PRE-PROD, PROD, etc.), or a more, or less frequent
                delivery calendar. Keep this in mind as you read. SUSE
                Manager is a very flexible product that has helped many
                customers create and deploy solid systems and patch
                management framework. Your requirements may differ from the
                ones described here, but the flexibility of SUSE Manager
                enables you to meet your ongoing and changing needs.</para>

        </sect2>

        <sect2>
            <title>Guidance</title>

            <para>This guide is based on SUSE Manager 2.1. A fresh
                installation is not necessary, but some assumption is made
                that you have a working SUSE Manager environment, with some
                registered hosts, and a decent knowledge of the terms and
                capabilities. The SUSE Manager documentation is an
                excellent source of information that is often updated.
                Please refer to the documentation for clarification of any
                process that seems confusing. Many of the implementation
                steps detailed in this document are enhanced examples based
                on procedures, capabilities or step-by-step “how-tos” in
                our product documentation.</para>

            <important>
                <para>Some advanced features (like using the spacecmd or
                    the XMLRPC API) will be explained in more detail, but
                    may not be exhaustive. We will include some code
                    examples in the Appendix that can be used as-is, or
                    modified to suit your particular environments or needs.
                    However, these come with NO WARRANTY, and should not be
                    expected to be perfect for any given implementation.
                    ALWAYS TEST your particular implementation before any
                    production usage.</para>
            </important>

            <para>The next section will describe the setup of SUSE Manager
                to meet the requirements defined in the SCENARIO section.
                We will start with a description of the architecture (and
                components) developed to meet the requirements, and then
                proceed with steps to create it yourself. Each component
                within this guide is used together with the others to
                deliver a comprehensive solution in the specific scenario
                described herein, but might be used individually to help
                you meet your own solution requirements.</para>

        </sect2> 

    </sect1>
    
    <sect1>
        <title>Implementation</title>
        
        <para>Let’s review. We need to setup SUSE Manager and create a set 
            of procedures, processes and/or tools (scripts) to help us with 
            our patch lifecycle management. This will include the creation 
            (and optimally an “automatic” creation) of patch archive channels 
            from the SUSE provided “updates” channels for the versions of 
            SUSE Linux Enterprise Server we use.
            These patch archives will be the sources for our patch promotions, but can also be a source to setup testing
            environments based on a patch set rolled out in the past. This could be used to troubleshoot an error condition for
            example, by creating a lab full of hosts patched up to any previous patch set. We can also demonstrate and
            visualize a clear view of compliance defined by a time-stamped set of patches. </para>
        
        
    </sect1>



</article>
