<?xml version="1.0" encoding="UTF-8"?>
<!--<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>-->
<!DOCTYPE article [
<!ENTITY % entity SYSTEM "entity-decl.ent">
%entity;
]>

<article role="sbp" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="art.sbp.amdepyc.sles12sp3"
  xml:lang="en">

  <info>
    <title>How to Deploy SUSE Linux Enterprise Server with SUSE Manager on IBM PowerVM</title>
    <!--<subtitle>Simplified Deployment on Microsoft Azure</subtitle>-->
    <productname>SUSE Linux Enterprise Server</productname>
    <productnumber>12 SP3</productnumber>

    <author>
      <personname>
        <firstname>Olivier</firstname>
        <surname>Van Rompuy, Senior System Engineer and Technical Consultant, IRIS</surname>
      </personname>
      <!--      <affiliation>
        <jobtitle>Senior Software Engineer</jobtitle>
        <orgname>SUSE</orgname>
        </affiliation>-->
    </author>



    <date><?dbtimestamp format="B d, Y" ?></date>

    <abstract>

      <para>The document at hand provides an overview of how to deploy SUSE Manager on IBM Power
        Systems. This enables you to manage and maintain your enterprise Linux system deployments
        across physical, virtual and cloud environments via one centralized tool. Described is a
        base deployment of SUSE Manager 3.1 on IBM PowerVM LPARs, including Autoinstallation,
        AutoYaST and Netboot Integration.</para>
    </abstract>
  </info>

  <sect1 xml:id="sec.install_suma_power">
    <title>Installing SUSE Manager on IBM Power</title>

    <para>First, you need to perform several actions related to the IBM PowerVM architecture (refer
      also to the IBM documentation at <link
        xlink:href="https://www.ibm.com/support/knowledgecenter/"
        >https://www.ibm.com/support/knowledgecenter/</link> ):</para>

    <procedure>
      <step>
        <para>Create a new Logical Partition (LPAR) for SUSE Manager on an IBM Power System with
          POWER8 or higher processors.</para>
      </step>
      <step>
        <para>Configure the infrastructure for this LPAR: LAN, SAN, storage luns, zoning,
          etc..</para>
      </step>
      <step>
        <para>Create a virtual DVD drive for this LPAR on one of the VIO servers (learn more about
          VIO servers here: <link
            xlink:href="https://www.ibm.com/support/knowledgecenter/en/POWER8/p8hb1/p8hb1_vios_virtualioserveroverview.htm"
            >https://www.ibm.com/support/knowledgecenter/en/POWER8/p8hb1/p8hb1_vios_virtualioserveroverview.htm</link>).</para>
      </step>
      <step>
        <para>Add the SUSE Linux Enterprise Server 12 ISO files to the virtual optical device (dvd)
          repository on this VIO server.</para>
      </step>
      <step>
        <para>Using the command <command>cfgassist</command> on the VIO server loads the first DVD
          in the virtual drive.</para>
      </step>
      <step>
        <para>Activate the LPAR, enter the System Management Services (SMS) menu and choose to boot
          from the DVD.</para>
      </step>
    </procedure>

    <para>When the SUSE YaST installation tool appears, subscribe with the correct SUSE Customer
      Center (SCC) registration code (<quote>SUSE Linux Enterprise Server for IBM POWER</quote>).
      Collect your registration codes from the SCC portal site at <link
        xlink:href="https://scc.suse.com">https://scc.suse.com</link>.</para>

    <para>Now choose to add the SUSE Manger Server extension as shown on the screen below, and enter
        <emphasis role="strong">Next</emphasis>:</para>

    <figure>
      <title>YaST Installation - Extensions and Module Selection</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-extension-selection.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-extension-selection.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Accept the SUSE End User License Agreement (EULA) and enter <emphasis role="strong"
        >Next</emphasis>:</para>

    <figure>
      <title>YaST Installation - SUSE End User License Agreement</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-license-agreement.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-license-agreement.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Provide the correct registration code delivered with your SUSE Manager subscription, and
      enter <emphasis role="strong">Next</emphasis>:</para>

    <figure>
      <title>YaST Installation - SUSE Manager Registration Code</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-extension-regcodes.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-extension-regcodes.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>No additional <emphasis role="strong">Add On Product</emphasis> has to be installed. Skip
      this screen and enter <emphasis role="strong">Next</emphasis>:</para>

    <figure>
      <title>YaST Installation - Add On Product</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-addon.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-addon.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>The next screen provides the partitioning options:</para>

    <figure>
      <title>YaST Installation - Partitioning Options</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-suggestedpartioning-1.png " width="60%" format="PNG"
          />
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-suggestedpartioning-1.png " width="70%" format="PNG"
          />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Select <emphasis role="strong">Expert Partitioner</emphasis>:</para>

    <figure>
      <title>YaST Installation - Expert Partitioner</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-expertpartinioneer.png" width="30%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-expertpartinioneer.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Execute <emphasis role="strong">Rescan Devices</emphasis> to clear the auto-suggested
      partitioning:</para>

    <figure>
      <title>YaST Installation - Rescan Devices</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-rescandevices.png" width="30%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-rescandevices.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>In the particular scenario at hand, a reinstallation has been performed. In this case,
      follow the steps below. If partitioning and/or LVM settings are already present, choose to
      import these settings into the installer, and select <emphasis role="strong">Import Mount
        Points</emphasis>:</para>

    <figure>
      <title>YaST Installation - Import Moint Points</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-importmount.png" width="30%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-importmount.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <note>
      <title>Fresh Installation</title>
      <para>If you perform an installation from scratch, configure your partitions and LVM settings
        following the recommendations below:</para>

      <simplelist>
        <member>Minimum 100 GB for root / partition</member>
        <member>Minimum 50 GB for <filename>/var/lib/pgsql</filename></member>
        <member>Minimum 50 GB per SUSE product and 100 GB per Red Hat product for
            <filename>/var/spacewalk</filename></member>
      </simplelist>
    </note>

    <para>When you are finished, continue with the partitioning step, and enter <emphasis
        role="strong">Next</emphasis>:</para>

    <figure>
      <title>YaST Installation - Suggested Partitioning</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-suggestedpartitionig-2.png" width="60%" format="PNG"
          />
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-suggestedpartitionig-2.png" width="70%" format="PNG"
          />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Provide the correct time zone settings, and confirm them with <emphasis role="strong"
        >Next</emphasis>:</para>

    <figure>
      <title>YaST Installation - Clock and Time Zone</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-timezone.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-timezone.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>At this stage you can choose to skip the creation of an initial user. Enter <emphasis
        role="strong">Next</emphasis>:</para>

    <figure>
      <title>YaST Installation - Local User</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-localuser.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-localuser.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Verify the settings overview and make further changes or customizations where needed.
      Confirm with <emphasis role="strong">Install</emphasis> to start the installation:</para>

    <figure>
      <title>YaST Installation - Installation Settings</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-installation-settings.png" width="60%" format="PNG"
          />
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-installation-settings.png" width="70%" format="PNG"
          />
        </imageobject>
      </mediaobject>
    </figure>

    <para>After the installation is finished, verify whether all aspects of the operating system
      have been installed correctly.</para>

  </sect1>

  <sect1 xml:id="sec.suma_setup">
    <title>SUSE Manager Setup</title>

    <important>
      <title>DNS</title>

      <para>After the installation make sure you configure your hosts DNS settings and add an entry
        to DNS. This ensures that the host name can be correctly resolved.</para>

    </important>

    <para>Open an SSH session to the new SUSE Manager host and start YaST:</para>

    <screen># yast2 susemanager_setup</screen>

    <para>Choose to configure SUSE Manager from scratch:</para>

    <figure>
      <title>YaST Installation - Setting up SUSE Manager</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-setupfromscratch.png" width="30%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-setupfromscratch.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Enter a correct administrator email address:</para>

    <figure>
      <title>YaST Installation - Email Address</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-email.png" width="30%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-email.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Provide details for the certificate generation:</para>

    <figure>
      <title>YaST Installation - Certificate Generation</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-certifcatesetup.png" width="30%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-certifcatesetup.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Provide database authentication settings:</para>

    <figure>
      <title>YaST Installation - Database Settings</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-db-settings.png" width="30%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-db-settings.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Provide your SUSE Manager SCC organization user name and password:</para>

    <figure>
      <title>YaST Installation - SCC Settings</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-sccsettings.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-sccsettings.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Perform an authentication test towards the SUSE Customer Center:</para>

    <figure>
      <title>YaST Installation - Test Details</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-test-details.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-test-details.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Confirm to run the setup process with <emphasis role="strong">Yes</emphasis>:</para>

    <figure>
      <title>YaST Installation - Setup Process Confirmation</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-runsetupnow.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-runsetupnow.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Now the setup process is started:</para>

    <figure>
      <title>YaST Installation - Write Settings</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-writesettings.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-writesettings.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Wait until the setup process is completed. Then enter <emphasis role="strong"
        >Finish</emphasis>:</para>

    <figure>
      <title>YaST Installation - Setup Completed</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-yast-setupcompleted.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-yast-setupcompleted.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Verify that you can access the new SUSE Manager URL using a browser.</para>

    <important>
      <title/>
      <para>In SUSE Linux Enterprise Server 12 SP3 a small workaround fix needs to be applied to the
        Apache configuration file to be able to use spacewalk (at the time of writing):</para>

      <para>Add the following file with the following line of content:</para>
      <screen># vi /etc/apache2/conf.d/zipp-fix.conf
HttpProtocolOptions Unsafe</screen>

      <para>Restart Apache to activate the change:</para>
      <screen># systemctl restart apache2.service</screen>

    </important>


  </sect1>

  <sect1 xml:id="sec.create_org">
    <title>Create and Configure the Organization</title>

    <para>After the SUSE Manager setup is finished, you must create your organization on the SUSE
      Manager Web user interface.</para>

    <para>Provide all the requested details including an initial administrator user and
      password:</para>

    <figure>
      <title>SUSE Manager Web UI - Create Organization</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-createorg.png" width="100%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-createorg.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Confirm with <emphasis role="strong">Create Organization</emphasis>. The following message
      appears on the screen:</para>

    <figure>
      <title>SUSE Manager Web UI - Organization Created Successfully</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-organization-created.png" width="100%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-organization-created.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Navigate to the <emphasis role="strong">Setup Wizard</emphasis> in the left pane:</para>

    <figure>
      <title>SUSE Manager Web UI - Setup Wizard</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-setupwizard.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-setupwizard.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Select the <emphasis role="strong">Organization Credentials</emphasis> tab:</para>

    <figure>
      <title>SUSE Manager Web UI - Organization Credentials</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-orgcredentials.png" width="30%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-orgcredentials.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Click <emphasis role="strong">Add a new credential</emphasis>:</para>

    <figure>
      <title>SUSE Manager Web UI - Add Credential</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-newcredential.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-newcredential.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Enter your correct organization credentials from the SCC portal and save them:</para>

    <figure>
      <title>SUSE Manager Web UI - Edit Credentials</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-editcredentials.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-editcredentials.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Now navigate to the <emphasis role="strong">SUSE Products</emphasis> tab and select the
      SUSE products you need. In this example, SUSE Linux Enterprise Server for SAP Applications 12
      SP3 has been selected:</para>

    <figure>
      <title>SUSE Manager Web UI - SUSE Products</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-suseproducts.png" width="100%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-suseproducts.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Do not forget to also check the sub-channels you need for each product:</para>

    <figure>
      <title>SUSE Manager Web UI - Sub-Channels</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-select-modules.png" width="100%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-select-modules.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>When your selection is done, confirm it with <emphasis role="strong">Add
        products</emphasis>:</para>

    <figure>
      <title>SUSE Manager Web UI - Add Products</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-button-addproducts.png" width="30%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-button-addproducts.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Navigate to <emphasis role="strong">Manager Configuration</emphasis> in the left pane, and
      select <emphasis role="strong">Bare-metal systems</emphasis> as indicated below:</para>

    <figure>
      <title>SUSE Manager Web UI - Bare-metal Systems</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-baremetal.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-baremetal.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Now enable <emphasis role="strong">Bare-metal systems</emphasis> by clicking on the green
      box <emphasis role="strong">Enable adding to this organization</emphasis>:</para>

    <figure>
      <title>SUSE Manager Web UI - Enable Bare-metal Systems</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-sumaconfig-baremetal.png" width="100%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-sumaconfig-baremetal.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

  </sect1>

  <sect1 xml:id="sec.create_swchannel_hierarchy">
    <title>Create the Software Channel Hierarchy</title>

    <para>The following section describes how to create the software channel hierarchy.</para>

    <para>Log on as root using SSH. Install the <package>spacewalk-utils</package> package with the
      following command:</para>

    <screen># zypper install spacewalk-utils</screen>

    <para>Check whether the available channels correspond with selections made before:</para>

    <screen># spacewalk-manage-channel-lifecycle  --list-channels
Spacewalk Username: admin
Spacewalk Password: 
Channel tree:
  
 1. sle12-sp2-sap-pool-ppc64le
      \__ ibm-dlpar-utils-sap-sp2
      \__ sle-12-sp2-sap-updates-ppc64le
      \__ sle-ha12-sp2-pool-ppc64le-sap-sp2
      \__ sle-ha12-sp2-updates-ppc64le-sap-sp2
      \__ sle-manager-tools12-pool-ppc64le-sap-sp2
      \__ sle-manager-tools12-updates-ppc64le-sap-sp2
      \__ sle-module-adv-systems-management12-pool-ppc64le-sap-sp2
      \__ sle-module-adv-systems-management12-updates-ppc64le-sap-sp2
      \__ sle-module-legacy12-pool-ppc64le-sap-sp2
      \__ sle-module-legacy12-updates-ppc64le-sap-sp2
      \__ sles12-sp2-pool-ppc64le-sap-sp2
      \__ sles12-sp2-updates-ppc64le-sap-sp2
  
 2. sle12-sp3-sap-pool-ppc64le
      \__ ibm-dlpar-utils-sap-sp3
      \__ sle-12-sp3-sap-updates-ppc64le
      \__ sle-ha12-sp3-pool-ppc64le-sap-sp3
      \__ sle-ha12-sp3-updates-ppc64le-sap-sp3
      \__ sle-manager-tools12-pool-ppc64le-sap-sp3
      \__ sle-manager-tools12-updates-ppc64le-sap-sp3
      \__ sle-module-adv-systems-management12-pool-ppc64le-sap-sp3
      \__ sle-module-adv-systems-management12-updates-ppc64le-sap-sp3
      \__ sle-module-legacy12-pool-ppc64le-sap-sp3
      \__ sle-module-legacy12-updates-ppc64le-sap-sp3
      \__ sles12-sp3-pool-ppc64le-sap-sp3
      \__ sles12-sp3-updates-ppc64le-sap-sp3
</screen>

    <para>Synchronize the <filename>ibm-dlpar</filename> repository and import the GPG key.</para>

    <screen># spacewalk-repo-sync --channel ibm-dlpar-utils-sap-sp2
14:38:14 ======================================
14:38:14 | Channel: ibm-dlpar-utils-sap-sp2
14:38:14 ======================================
14:38:14 Sync of channel started.
Do you want to import the GPG key 0x3E6E42BE "Linux on POWER (IBM Linux Technology Center) &lt;poweryum@linux.vnet.ibm.com>" from http://public.dhe.ibm.com/software/server/POWER/Linux/yum/OSS/SLES/12/ppc64le//repodata/repomd.xml.key? [y/n]:
<emphasis role="strong">y</emphasis>
14:38:20 Repo URL: http://public.dhe.ibm.com/software/server/POWER/Linux/yum/OSS/SLES/12/ppc64le/
14:38:20 Packages in repo:                36
14:38:20 Packages already synced:          0
14:38:20 Packages to sync:                30
14:38:20 New packages to download:        30
14:38:20 Downloading 30 files.
14:38:22 1/30 : DynamicRM-2.0.5-1.ppc64le.rpm
14:38:22 2/30 : IBMinvscout-3.1.0-2.ppc64le.rpm
…….
14:38:29 29/30 : rsct.core-3.2.2.3-17144.ppc64le.rpm
14:38:47 30/30 : esagent.pLinux-4.2.0-9.noarch.rpm
Importing packages:     |##################################################| 100.0% 
14:38:54 Linking packages to channel.
14:38:55 Transferred 100 orphaned vendor packages to the default organization
14:38:55 Repo http://public.dhe.ibm.com/software/server/POWER/Linux/yum/OSS/SLES/12/ppc64le/ has 0 patches.
14:38:55 Sync completed.
14:38:55 Total time: 0:00:40
    
# spacewalk-repo-sync --channel ibm-dlpar-utils-sap-sp3
…
    
Synchronize the base channel :
# spacewalk-repo-sync --channel sle12-sp2-sap-pool-ppc64le
...
    
# spacewalk-repo-sync --channel sle12-sp3-sap-pool-ppc64le
…
</screen>

    <para>In the specific setup at hand, the lifecycle phases are limited to just <quote>dev</quote>
      and <quote>prod</quote> (remove <quote>test</quote>).</para>

    <para>Generate the <quote>dev</quote> channels by promoting the SUSE channels. The same command
      is used to fully synchronize the <quote>dev</quote> channels with the online
      repositories:</para>

    <screen># spacewalk-manage-channel-lifecycle -c sle12-sp2-sap-pool-ppc64le --promote
INFO: Cloning dev-sle12-sp2-sap-pool-ppc64le from sle12-sp2-sap-pool-ppc64le
INFO: Cloning dev-ibm-dlpar-utils-sap-sp2 from ibm-dlpar-utils-sap-sp2
INFO: Cloning dev-sle-12-sp2-sap-updates-ppc64le from sle-12-sp2-sap-updates-ppc64le
INFO: Cloning dev-sle-ha12-sp2-pool-ppc64le-sap-sp2 from sle-ha12-sp2-pool-ppc64le-sap-sp2
INFO: Cloning dev-sle-ha12-sp2-updates-ppc64le-sap-sp2 from sle-ha12-sp2-updates-ppc64le-sap-sp2
INFO: Cloning dev-sle-manager-tools12-pool-ppc64le-sap-sp2 from sle-manager-tools12-pool-ppc64le-sap-sp2
INFO: Cloning dev-sle-manager-tools12-updates-ppc64le-sap-sp2 from sle-manager-tools12-updates-ppc64le-sap-sp2
INFO: Cloning dev-sle-module-adv-systems-management12-pool-ppc64le-sap-sp2 from sle-module-adv-systems-management12-pool-ppc64le-sap-sp2
INFO: Cloning dev-sle-module-adv-systems-management12-updates-ppc64le-sap-sp2 from sle-module-adv-systems-management12-updates-ppc64le-sap-sp2
INFO: Cloning dev-sle-module-legacy12-pool-ppc64le-sap-sp2 from sle-module-legacy12-pool-ppc64le-sap-sp2
INFO: Cloning dev-sle-module-legacy12-updates-ppc64le-sap-sp2 from sle-module-legacy12-updates-ppc64le-sap-sp2
INFO: Cloning dev-sles12-sp2-pool-ppc64le-sap-sp2 from sles12-sp2-pool-ppc64le-sap-sp2
INFO: Cloning dev-sles12-sp2-updates-ppc64le-sap-sp2 from sles12-sp2-updates-ppc64le-sap-sp2
</screen>

    <para>Now the <quote>dev</quote> channel can be promoted to generate and synchronize the
        <quote>prod</quote> channels with <command>dev</command>:</para>

    <screen># spacewalk-manage-channel-lifecycle -c dev-sle12-sp2-sap-pool-ppc64le --promote
INFO: Cloning prod-sle12-sp2-sap-pool-ppc64le from dev-sle12-sp2-sap-pool-ppc64le
INFO: Cloning prod-ibm-dlpar-utils-sap-sp2 from dev-ibm-dlpar-utils-sap-sp2
INFO: Cloning prod-sle-12-sp2-sap-updates-ppc64le from dev-sle-12-sp2-sap-updates-ppc64le
INFO: Cloning prod-sle-ha12-sp2-pool-ppc64le-sap-sp2 from dev-sle-ha12-sp2-pool-ppc64le-sap-sp2
INFO: Cloning prod-sle-ha12-sp2-updates-ppc64le-sap-sp2 from dev-sle-ha12-sp2-updates-ppc64le-sap-sp2
INFO: Cloning prod-sle-manager-tools12-pool-ppc64le-sap-sp2 from dev-sle-manager-tools12-pool-ppc64le-sap-sp2
INFO: Cloning prod-sle-manager-tools12-updates-ppc64le-sap-sp2 from dev-sle-manager-tools12-updates-ppc64le-sap-sp2
INFO: Cloning prod-sle-module-adv-systems-management12-pool-ppc64le-sap-sp2 from dev-sle-module-adv-systems-management12-pool-ppc64le-sap-sp2
INFO: Cloning prod-sle-module-adv-systems-management12-updates-ppc64le-sap-sp2 from dev-sle-module-adv-systems-management12-updates-ppc64le-sap-sp2
INFO: Cloning prod-sle-module-legacy12-pool-ppc64le-sap-sp2 from dev-sle-module-legacy12-pool-ppc64le-sap-sp2
INFO: Cloning prod-sle-module-legacy12-updates-ppc64le-sap-sp2 from dev-sle-module-legacy12-updates-ppc64le-sap-sp2
INFO: Cloning prod-sles12-sp2-pool-ppc64le-sap-sp2 from dev-sles12-sp2-pool-ppc64le-sap-sp2
INFO: Cloning prod-sles12-sp2-updates-ppc64le-sap-sp2 from dev-sles12-sp2-updates-ppc64le-sap-sp2
</screen>

    <para>The same steps need to be performed for any additional product or version:</para>

    <screen># spacewalk-manage-channel-lifecycle -c sle12-sp3-sap-pool-ppc64le –promote
…
  
# spacewalk-manage-channel-lifecycle -c dev-sle12-sp3-sap-pool-ppc64le –promote
…
</screen>

    <para>For all of the <filename>-ibm-dlpar-utils-</filename> child channels, deactivate the GPG
      check as it requires an external GPG key from IBM. To do so, navigate to <emphasis
        role="strong">Software</emphasis> in the left pan. Then go to <emphasis role="strong">Manage
        Software Channels</emphasis> and choose <emphasis role="strong">Overview</emphasis>:</para>

    <figure>
      <title>SUSE Manager Web UI - Manage Software Channels</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-swchannels-overview.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-swchannels-overview.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>A list of all of the <filename>-ibm-dlpar-utils-</filename> child channels appears:</para>

    <figure>
      <title>SUSE Manager Web UI - List of Child Channels</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-devsle12.png" width="30%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-devsle12.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Make sure the check box for <emphasis role="strong">Enable GPG Check</emphasis> is not
      marked:</para>

    <figure>
      <title>SUSE Manager Web UI - Enable GPG Check</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-enablegpgcheck.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-enablegpgcheck.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Alternatively you can download the GPG key locally and configure a local URL.</para>

  </sect1>

  <sect1 xml:id="sec.create_system_groups">
    <title>Creating System Groups</title>

    <para>Optionally you can configure system groups to distinguish different types of systems. In
      this example the system groups <quote>development</quote> and <quote>production</quote> are
      configured.</para>

    <para>Navigate to <emphasis role="strong">Systems</emphasis> on the left pane, and select
        <emphasis role="strong">System Groups</emphasis>:</para>

    <figure>
      <title>SUSE Manager Web UI - System Groups</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-systemgroups.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-systemgroups.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Click <emphasis role="strong">Create Group</emphasis>:</para>

    <figure>
      <title>SUSE Manager Web UI - Button Create Group</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-button-creategroup.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-button-creategroup.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Enter the required information and confirm by clicking <emphasis role="strong">Create
        Group</emphasis>:</para>

    <figure>
      <title>SUSE Manager Web UI - Create System Groups</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-createsystemgroup.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-createsystemgroup.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Now you see the newly created groups:</para>

    <figure>
      <title>SUSE Manager Web UI - Show System Groups</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-showsystemgroups.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-showsystemgroups.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>


  </sect1>

  <sect1 xml:id="sec.bootstrap_config">
    <title>Bootstrap Configuration</title>

    <para>Navigate to <emphasis role="strong">Manager Configuration</emphasis> on the left pane, and
      select <emphasis role="strong">Bootstrap Script</emphasis>.</para>

    <figure>
      <title>SUSE Manager Web UI - Menu Manager Configuration</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-managerconfic.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-managerconfic.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Click the <emphasis role="strong">Bootstrap Script</emphasis> tab on top. Enter the
      required information to create the general client bootstrap script configuration:</para>

    <figure>
      <title>SUSE Manager Web UI - Tab Bootstrap Script</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-bootstrap-script.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-bootstrap-script.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Provide the correct <emphasis>Fully-Qualified Domain Name</emphasis> (FQDN) for the SUSE
      Manager host name.</para>

    <para>Now create the activation keys. Navigate to <emphasis role="strong">Systems</emphasis> on
      the left pane and choose <emphasis role="strong">Activation Keys</emphasis>:</para>

    <figure>
      <title>SUSE Manager Web UI - Activation Keys</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-activationkeys.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-activationkeys.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Click <emphasis role="strong">Create Key</emphasis>:</para>

    <figure>
      <title>SUSE Manager Web UI - Button Create Key</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-button-createkey.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-button-createkey.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Create a universal activation key first:</para>

    <figure>
      <title>SUSE Manager Web UI - Universal Key</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-createuniversalkey.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-createuniversalkey.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>After that, create a key you will use for the autoinstall procedure. For the example at
      hand, the <quote>dev</quote> channel has been selected as base channel.</para>

    <figure>
      <title>SUSE Manager Web UI - Create Key for <quote>dev</quote> Channel</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-createkey-devchannel.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-createkey-devchannel.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Click the <emphasis role="strong">Child Channels</emphasis> tab on top. The appropriate
      channels should be linked here:</para>

    <figure>
      <title>SUSE Manager Web UI - Child Channels</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-childchannels.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-childchannels.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Click the <emphasis role="strong">Packages</emphasis> tab on top, and add the following
      values as packages:</para>

    <figure>
      <title>SUSE Manager Web UI - Packages</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-packages.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-packages.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Click <emphasis role="strong">Update Activation Key</emphasis>.</para>

    <para>Now add the development group to this key. Click the <emphasis role="strong"
        >Groups</emphasis> tab on top and choose <emphasis role="strong">List /
      Leave</emphasis>:</para>

    <figure>
      <title>SUSE Manager Web UI - Groups - List/Leave</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-list-systemgroups.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-list-systemgroups.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Optionally you can also create and add configuration channels.</para>

    <para>Perform the same configuration for a <emphasis role="strong">prod</emphasis> key:</para>

    <figure>
      <title>SUSE Manager Web UI - Create Key for <quote>prod</quote> Channel</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="suma-powervm-ui-create-activation-key.png" width="60%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="suma-powervm-ui-create-activation-key.png" width="70%" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>You also need to create a bootstrap repository. Use the command:</para>

    <screen># mgr-create-bootstrap-repo -c SLES4SAP-12-SP2-ppc64le</screen>

    <para>Bootstrap scripts are usually generated automatically, but you can manually generate them
      for each key using the following CLI syntax:</para>

    <screen># mgr-bootstrap --activation-keys=1-dev-sle12-sp2-sap-pool-ppc64le --script bootstrap-dev-sle12-sp2-sap-pool-ppc64le.sh --no-up2date --allow-config-actions --allow-remote-commands</screen>

    <screen># mgr-bootstrap --activation-keys=1-prod-sle12-sp2-sap-pool-ppc64le --script bootstrap-prod-sle12-sp2-sap-pool-ppc64le.sh  --no-up2date --allow-config-actions –allow-remote-commands</screen>

    <para>The default path where the bootstrap scripts reside is
        <filename>/srv/www/htdocs/pub/bootstrap</filename>. </para>

    <para>The URL to access the scripts is <link
        xlink:href="https://hostname.domain/pub/bootstrap/bootstrap-scriptname.sh"
        >https://hostname.domain/pub/bootstrap/bootstrap-scriptname.sh</link>.</para>

    <para>An already installed SUSE Linux Enterprise Server host can be bootstrapped using the
      following syntax from that host:</para>

    <screen>curl -Sks https://hostname.domain/pub/bootstrap/bootstrap-scriptname.sh |  /bin/bash</screen>

    <para>You can also copy and past the script below and execute it.</para>

    <bridgehead>Custom Bootstrap Script</bridgehead>

    <para>The following script blueprint can be used to create a custom bootstrap script. Modify the
    SUSE Manager host name and the activation key according to your requirements.</para>
    
<screen>
#!/bin/bash
echo "SUSE Manager Server Client bootstrap script v4.0"
echo
echo
echo "MINOR MANUAL EDITING OF THIS FILE MAY BE REQUIRED!"
echo
echo "If this bootstrap script was created during the initial installation"
echo "of a SUSE Manager Server, the ACTIVATION_KEYS, and ORG_GPG_KEY values will"
echo "probably *not* be set (see below). If this is the case, please do the"
echo "following:"
echo "  - copy this file to a name specific to its use."
echo "    (e.g., to bootstrap-SOME_NAME.sh - like bootstrap-web-servers.sh.)"
echo "  - on the website create an activation key or keys for the system(s) to"
echo "    be registered."
echo "  - edit the values of the VARIABLES below (in this script) as"
echo "    appropriate:"
echo "    - ACTIVATION_KEYS needs to reflect the activation key(s) value(s)"
echo "      from the website. XKEY or XKEY,YKEY"
echo "    - ORG_GPG_KEY needs to be set to the name(s) of the corporate public"
echo "      GPG key filename(s) (residing in /srv/www/htdocs/pub) if appropriate. XKEY or XKEY,YKEY"
echo
echo "Verify that the script variable settings are correct:"
echo "    - CLIENT_OVERRIDES should be only set differently if a customized"
echo "      client-config-overrides-VER.txt file was created with a different"
echo "      name."
echo "    - ensure the value of HOSTNAME is correct."
echo "    - ensure the value of ORG_CA_CERT is correct."
echo
echo "Enable this script: comment (with #'s) this block (or, at least just"
echo "the exit below)"
echo
ACTIVATION_KEYS=1-dev-sle12-sp2-sap-pool-ppc64le
ORG_GPG_KEY=
CLIENT_OVERRIDES=client-config-overrides.txt
HOSTNAME=[SUMA FQDN]
ORG_CA_CERT=RHN-ORG-TRUSTED-SSL-CERT
ORG_CA_CERT_IS_RPM_YN=0
USING_SSL=1
USING_GPG=1
REGISTER_THIS_BOX=1
ALLOW_CONFIG_ACTIONS=1
ALLOW_REMOTE_COMMANDS=1
FULLY_UPDATE_THIS_BOX=0
PROFILENAME=""   # Empty by default to let it be set automatically.
DISABLE_LOCAL_REPOS=1
DISABLE_YAST_AUTOMATIC_ONLINE_UPDATE=1
Z_CLIENT_REPOS_ROOT=
MYNAME=`hostname -f`
LCMYNAME=`echo $MYNAME | tr '[:upper:]' '[:lower:]'`
LCHOSTNAME=`echo $HOSTNAME | tr '[:upper:]' '[:lower:]'`
  
if [ $LCMYNAME == $LCHOSTNAME ]; then
    echo "Name of client and of SUSE Manager server are the same."
    echo "Do not try to register a SUSE Manager server at itself!"
    echo "Aborting."
    exit 1
fi
if [ -f "/var/adm/autoinstall/cache/SUSE_Manager_keys" ]; then
    . /var/adm/autoinstall/cache/SUSE_Manager_keys
    if [ "x$redhat_management_key" != "x" ]; then
        ACTIVATION_KEYS="$ACTIVATION_KEYS,$redhat_management_key"
    fi
  
    if [ "x$registration_key" != "x" ]; then
        ACTIVATION_KEYS="$ACTIVATION_KEYS,$registration_key"
    fi
  
    ACTIVATION_KEYS=${ACTIVATION_KEYS#,}
fi
if [ -x /usr/bin/wget ] ; then
    output=`LANG=en_US /usr/bin/wget --no-check-certificate 2>&amp;1`
    error=`echo $output | grep "unrecognized option"`
    if [ -z "$error" ] ; then
        FETCH="/usr/bin/wget -nv -r -nd --no-check-certificate"
    else
        FETCH="/usr/bin/wget -nv -r -nd"
    fi
elif [ -x /usr/bin/curl ] ; then
    output=`LANG=en_US /usr/bin/curl -k 2>&amp;1`
    error=`echo $output | grep "is unknown"`
    if [ -z "$error" ] ; then
        FETCH="/usr/bin/curl -ksSOf"
    else
        FETCH="/usr/bin/curl -sSOf"
    fi
else
    echo "To be able to download files, please install either 'wget' or 'curl'"
    exit 1
fi
  
HTTP_PUB_DIRECTORY=http://${HOSTNAME}/pub
HTTPS_PUB_DIRECTORY=https://${HOSTNAME}/pub
if [ $USING_SSL -eq 0 ] ; then
    HTTPS_PUB_DIRECTORY=${HTTP_PUB_DIRECTORY} 
fi

INSTALLER=up2date
if [ -x /usr/bin/zypper ] ; then
    INSTALLER=zypper
elif [ -x /usr/bin/yum ] ; then
    INSTALLER=yum
fi

if [ ! -w . ] ; then
    echo ""
    echo "*** ERROR: $(pwd):"
    echo "    No permission to write to the current directory."
    echo "    Please execute this script in a directory where downloaded files can be stored."
    echo ""
    exit 1
fi
echo
echo "UPDATING RHN_REGISTER/UP2DATE CONFIGURATION FILES"
echo "-------------------------------------------------"
echo "* downloading necessary files"
echo "  client_config_update.py..."
rm -f client_config_update.py
$FETCH ${HTTPS_PUB_DIRECTORY}/bootstrap/client_config_update.py
echo "  ${CLIENT_OVERRIDES}..."
rm -f ${CLIENT_OVERRIDES}
$FETCH ${HTTPS_PUB_DIRECTORY}/bootstrap/${CLIENT_OVERRIDES}

if [ ! -f "client_config_update.py" ] ; then
    echo "ERROR: client_config_update.py was not downloaded"
    exit 1
fi
if [ ! -f "${CLIENT_OVERRIDES}" ] ; then
    echo "ERROR: ${CLIENT_OVERRIDES} was not downloaded"
    exit 1
fi

echo
echo "PREPARE GPG KEYS AND CORPORATE PUBLIC CA CERT"
echo "-------------------------------------------------"
if [ ! -z "$ORG_GPG_KEY" ] ; then
    echo
    echo "* importing organizational GPG keys"
    for GPG_KEY in $(echo "$ORG_GPG_KEY" | tr "," " "); do
        rm -f ${GPG_KEY}
        $FETCH ${HTTPS_PUB_DIRECTORY}/${GPG_KEY}
        res=$(LC_ALL=C rpm -q --queryformat '%{version}' up2date | sed -e 's/\..*//g')
        if [ "x$res" == "x2" ] ; then
            gpg $(up2date --gpg-flags) --import $GPG_KEY
        else
            rpm --import $GPG_KEY
        fi
    done
else
    echo "* no organizational GPG keys to import"
fi

echo
if [ $USING_SSL -eq 1 ] ; then
    echo "* attempting to install corporate public CA cert"
    test -d /usr/share/rhn || mkdir -p /usr/share/rhn
    rm -f ${ORG_CA_CERT}
    $FETCH ${HTTP_PUB_DIRECTORY}/${ORG_CA_CERT}

    if [ $ORG_CA_CERT_IS_RPM_YN -eq 1 ] ; then
        rpm -Uvh --force --replacefiles --replacepkgs ${ORG_CA_CERT}
        rm -f ${ORG_CA_CERT}
    else
        mv ${ORG_CA_CERT} /usr/share/rhn/
    fi

    if [ "$INSTALLER" == zypper ] ; then
      function suseVersion() {
        rpm --eval "%{suse_version}"
      }

      function sslCertDir() {
        if [[ $(suseVersion) -ge 1315 ]]; then
          echo "/etc/pki/trust/anchors"
        else
          echo "/etc/ssl/certs"
        fi
      }

      function targetCertPath() {
        echo "$(sslCertDir)/${ORG_CA_CERT}.pem"
      }

      function updateCertificates() {
        if [[ $(suseVersion) -ge 1315 ]]; then
          test -x /usr/sbin/update-ca-certificates &amp;&amp; /usr/sbin/update-ca-certificates
        else
          test -x /usr/bin/c_rehash &amp;&amp; /usr/bin/c_rehash /etc/ssl/certs/ | grep "${ORG_CA_CERT}"
        fi
      }

      function symlinkCertificate() {
        if [  $ORG_CA_CERT_IS_RPM_YN -eq 1 ] ; then
          ORG_CA_CERT=$(basename $(sed -n 's/^sslCACert *= *//p' "${CLIENT_OVERRIDES}"))
        fi
        test -e "$(targetCertPath)" || {
          test -d $(sslCertDir) || mkdir -p $(sslCertDir)
          ln -s "/usr/share/rhn/${ORG_CA_CERT}" "$(targetCertPath)"
        }
      }

      symlinkCertificate
      updateCertificates
    fi
else
    echo "* configured not to use SSL: don't install corporate public CA cert"
fi

if [ "$INSTALLER" == zypper ]; then
  echo
  echo "CHECKING THE REGISTRATION STACK"
  echo "-------------------------------------------------"

  function getZ_CLIENT_CODE_BASE() {
    local BASE=""
    local VERSION=""
    local PATCHLEVEL=""
    test -r /etc/SuSE-release &amp;&amp; {
      grep -q 'Enterprise' /etc/SuSE-release &amp;&amp; BASE="sle"
      eval $(grep '^\(VERSION\|PATCHLEVEL\)' /etc/SuSE-release | tr -d '[:blank:]')
    }
    Z_CLIENT_CODE_BASE="${BASE:-unknown}"
    Z_CLIENT_CODE_VERSION="${VERSION:-unknown}"
    Z_CLIENT_CODE_PATCHLEVEL="${PATCHLEVEL:-0}"
  }

  function getZ_MISSING() {
    local NEEDED="spacewalk-check spacewalk-client-setup spacewalk-client-tools zypp-plugin-spacewalk"
    if [ "$Z_CLIENT_CODE_BASE" == "sle" -a "$Z_CLIENT_CODE_VERSION" == "10" ]; then
      which 'xsltproc' || NEEDED="$NEEDED libxslt"
    fi
    Z_MISSING=""
    for P in $NEEDED; do
      rpm -q "$P" || Z_MISSING="$Z_MISSING $P"
    done
  }

  function getZ_ZMD_TODEL() {
    local ZMD_STACK="zmd rug libzypp-zmd-backend yast2-registration zen-updater zmd-inventory suseRegister-jeos"
    if rpm -q suseRegister --qf '%{VERSION}' | grep -q '^\(0\.\|1\.[0-3]\)\(\..*\)\?$'; then
      # we need the new suseRegister >= 1.4, so wipe an old one too
      ZMD_STACK="$ZMD_STACK suseRegister suseRegisterInfo spacewalk-client-tools"
    fi
    Z_ZMD_TODEL=""
    for P in $ZMD_STACK; do
      rpm -q "$P" &amp;&amp; Z_ZMD_TODEL="$Z_ZMD_TODEL $P"
    done
  }

  echo "* check for necessary packages being installed..."
  getZ_CLIENT_CODE_BASE
  echo "* client codebase is ${Z_CLIENT_CODE_BASE}-${Z_CLIENT_CODE_VERSION}-sp${Z_CLIENT_CODE_PATCHLEVEL}"

  getZ_MISSING
  if [ -z "$Z_MISSING" ]; then
    echo "  no packages missing."
  else
    echo "* going to install missing packages..."
    Z_CLIENT_REPOS_ROOT="${Z_CLIENT_REPOS_ROOT:-https://${HOSTNAME}/pub/repositories}"
    Z_CLIENT_REPO_URL="${Z_CLIENT_REPOS_ROOT}/${Z_CLIENT_CODE_BASE}/${Z_CLIENT_CODE_VERSION}/${Z_CLIENT_CODE_PATCHLEVEL}/bootstrap"
    test "${Z_CLIENT_CODE_BASE}/${Z_CLIENT_CODE_VERSION}/${Z_CLIENT_CODE_PATCHLEVEL}" = "sle/11/1" &amp;&amp; {
      Z_CLIENT_REPO_URL="${Z_CLIENT_REPOS_ROOT}/susemanager-client-setup"
    }
    Z_CLIENT_REPO_NAME="susemanager-client-setup"
    Z_CLIENT_REPO_FILE="/etc/zypp/repos.d/$Z_CLIENT_REPO_NAME.repo"

    $FETCH $Z_CLIENT_REPO_URL/repodata/repomd.xml
    if [ ! -f "repomd.xml" ] ; then
        echo "Bootstrap repo '$Z_CLIENT_REPO_URL' does not exist."
        Z_CLIENT_REPO_URL=""
    fi
    rm -f repomd.xml
    if [ "$Z_CLIENT_CODE_BASE" == "sle" ]; then
      if [ "$Z_CLIENT_CODE_VERSION" = "10" ]; then
          echo "* check whether to remove the ZMD stack first..."
          getZ_ZMD_TODEL
          if [ -z "$Z_ZMD_TODEL" ]; then
            echo "  ZMD stack is not installed. No need to remove it."
          else
            echo "  Disable and remove the ZMD stack..."
            if [ -x /usr/sbin/rczmd ]; then
              /usr/sbin/rczmd stop
            fi
            rpm -e --nodeps $Z_ZMD_TODEL || {
              echo "ERROR: Failed remove the ZMD stack."
              exit 1
            }
          fi
      fi
    fi

    if rpm -q zypper --qf '%{VERSION}' | grep -q '^0\(\..*\)\?$'; then

      if [ -n "$Z_CLIENT_REPO_URL" ]; then
        echo "  adding client software repository at $Z_CLIENT_REPO_URL"
        zypper --non-interactive --no-gpg-checks sd $Z_CLIENT_REPO_NAME
        zypper --non-interactive --no-gpg-checks sa $Z_CLIENT_REPO_URL $Z_CLIENT_REPO_NAME
        zypper --non-interactive --no-gpg-checks refresh "$Z_CLIENT_REPO_NAME"
      fi
      zypper --non-interactive --no-gpg-checks in $Z_MISSING
      for P in $Z_MISSING; do
          rpm -q "$P" || {
            echo "ERROR: Failed to install all missing packages."
            exit 1
          }
      done
      if [ -n "$Z_CLIENT_REPO_URL" ]; then
        cat &lt;&lt;EOF >"$Z_CLIENT_REPO_FILE"
[$Z_CLIENT_REPO_NAME]
name=$Z_CLIENT_REPO_NAME
baseurl=$Z_CLIENT_REPO_URL
enabled=1
autorefresh=1
keeppackages=0
gpgcheck=0
EOF
      fi
    else

      if [ -n "$Z_CLIENT_REPO_URL" ]; then
        echo "  adding client software repository at $Z_CLIENT_REPO_URL"
        cat &lt;&lt;EOF >"$Z_CLIENT_REPO_FILE"
[$Z_CLIENT_REPO_NAME]
name=$Z_CLIENT_REPO_NAME
baseurl=$Z_CLIENT_REPO_URL
enabled=1
autorefresh=1
keeppackages=0
gpgcheck=0
EOF
        zypper --non-interactive --gpg-auto-import-keys refresh "$Z_CLIENT_REPO_NAME"
      fi
      zypper --non-interactive in $Z_MISSING || {
            echo "ERROR: Failed to install all missing packages."
            exit 1
          }

    fi
  zypper rr "$Z_CLIENT_REPO_NAME"
  fi
  if [ "$Z_CLIENT_CODE_BASE" == "sle" ]; then
    if [ "$Z_CLIENT_CODE_VERSION" = "10" ]; then
      test -e "/usr/share/zypp/migrate/10-11.migrate.products.sh" &amp;&amp; {
          echo "* check whether we have to to migrate metadata..."
          sh /usr/share/zypp/migrate/10-11.migrate.products.sh || {
            echo "ERROR: Failed to migrate product metadata."
            exit 1
          }
      }
    fi
  fi
fi

echo "* running the update scripts"
if [ -f "/etc/sysconfig/rhn/rhn_register" ] ; then
    echo "  . rhn_register config file"
    /usr/bin/python -u client_config_update.py /etc/sysconfig/rhn/rhn_register ${CLIENT_OVERRIDES}
fi
if [ -f "/etc/sysconfig/rhn/up2date" ] ; then
  echo "  . up2date config file"
  /usr/bin/python -u client_config_update.py /etc/sysconfig/rhn/up2date ${CLIENT_OVERRIDES}
fi

echo
echo "REGISTRATION"
echo "------------"
if [ -z "$ACTIVATION_KEYS" ] ; then
    echo "*** ERROR: in order to bootstrap SUSE Manager Server clients, an activation key or keys"
    echo "           must be created in the SUSE Manager Server web user interface, and the"
    echo "           corresponding key or keys string (XKEY,YKEY,...) must be mapped to"
    echo "           the ACTIVATION_KEYS variable of this script."
    exit 1
fi

if [ $REGISTER_THIS_BOX -eq 1 ] ; then
    echo "* registering"
    files=""
    directories=""
    if [ $ALLOW_CONFIG_ACTIONS -eq 1 ] ; then
        for i in "/etc/sysconfig/rhn/allowed-actions /etc/sysconfig/rhn/allowed-actions/configfiles"; do
            [ -d "$i" ] || (mkdir -p $i &amp;&amp; directories="$i $directories")
        done
        [ -f /etc/sysconfig/rhn/allowed-actions/configfiles/all ] || files="$files /etc/sysconfig/rhn/allowed-actions/configfiles/all"
        [ -n "$files" ] &amp;&amp; touch  $files
    fi
    if [ -z "$PROFILENAME" ] ; then
        profilename_opt=""
    else
        profilename_opt="--profilename=$PROFILENAME"
    fi
    /usr/sbin/rhnreg_ks --force --activationkey "$ACTIVATION_KEYS" $profilename_opt
    RET="$?"
    [ -n "$files" ] &amp;&amp; rm -f $files
    [ -n "$directories" ] &amp;&amp; rmdir $directories
    if [ $RET -eq 0 ]; then
      echo
      echo "*** this system should now be registered, please verify ***"
      echo
    else
      echo
      echo "*** Error: Registering the system failed."
      echo
      exit 1
    fi
else
    echo "* explicitely not registering"
fi

if [ $ALLOW_CONFIG_ACTIONS -eq 1 ] ; then
    echo
    echo "* setting permissions to allow configuration management"
    echo "  NOTE: use an activation key to subscribe to the tools"
    if [ "$INSTALLER" == zypper ] ; then
        echo "        channel and zypper install/update rhncfg-actions"
    elif [ "$INSTALLER" == yum ] ; then
        echo "        channel and yum upgrade rhncfg-actions"
    else
        echo "        channel and up2date rhncfg-actions"
    fi
    if [ -x "/usr/bin/rhn-actions-control" ] ; then
        rhn-actions-control --enable-all
        rhn-actions-control --disable-run
    else
        echo "Error setting permissions for configuration management."
        echo "    Please ensure that the activation key subscribes the"
        if [ "$INSTALLER" == zypper ] ; then
            echo "    system to the tools channel and zypper install/update rhncfg-actions."
        elif [ "$INSTALLER" == yum ] ; then
            echo "    system to the tools channel and yum updates rhncfg-actions."
        else
            echo "    system to the tools channel and up2dates rhncfg-actions."
        fi
        exit
    fi
fi

if [ $ALLOW_REMOTE_COMMANDS -eq 1 ] ; then
    echo
    echo "* setting permissions to allow remote commands"
    echo "  NOTE: use an activation key to subscribe to the tools"
    if [ "$INSTALLER" == zypper ] ; then
        echo "        channel and zypper update rhncfg-actions"
    elif [ "$INSTALLER" == yum ] ; then
        echo "        channel and yum upgrade rhncfg-actions"
    else
        echo "        channel and up2date rhncfg-actions"
    fi
    if [ -x "/usr/bin/rhn-actions-control" ] ; then
        rhn-actions-control --enable-run
    else
        echo "Error setting permissions for remote commands."
        echo "    Please ensure that the activation key subscribes the"
        if [ "$INSTALLER" == zypper ] ; then
            echo "    system to the tools channel and zypper updates rhncfg-actions."
        elif [ "$INSTALLER" == yum ] ; then
            echo "    system to the tools channel and yum updates rhncfg-actions."
        else
            echo "    system to the tools channel and up2dates rhncfg-actions."
        fi
        exit
    fi
fi

echo
echo "OTHER ACTIONS"
echo "------------------------------------------------------"
if [ $DISABLE_YAST_AUTOMATIC_ONLINE_UPDATE -eq 1 ]; then
    YAOU_SYSCFGFILE="/etc/sysconfig/automatic_online_update"
    if [ -f "$YAOU_SYSCFGFILE" ]; then
      echo "* Disable YAST automatic online update."
      sed -i 's/^ *AOU_ENABLE_CRONJOB.*/AOU_ENABLE_CRONJOB="false"/' "$YAOU_SYSCFGFILE"
      for D in /etc/cron.*; do
          test -L $D/opensuse.org-online_update &amp;&amp; rm $D/opensuse.org-online_update
      done
    fi
fi
if [ "$INSTALLER" == zypper ] ; then
  test -d /var/lib/suseRegister &amp;&amp; touch /var/lib/suseRegister/neverRegisterOnBoot
fi
if [ $DISABLE_LOCAL_REPOS -eq 1 ]; then
    if [ "$INSTALLER" == zypper ] ; then
          echo "* Disable all repos not provided by SUSE Manager Server."
          zypper ms -d --all
          zypper ms -e --medium-type plugin
          zypper mr -d --all
          zypper mr -e --medium-type plugin
          zypper mr -e "$Z_CLIENT_REPO_NAME"
    elif [ "$INSTALLER" == yum ] ; then
        echo "* Disable all repos not provided by SUSE Manager Server.";
          for F in /etc/yum.repos.d/*.repo; do
            test -f "$F" || continue
            awk '
              BEGIN           { saw=0 }
              /^ *[[]/        { if ( saw==1 ) print "enabled=0"; else saw=1 }
              /^ *enabled *=/ { print "enabled=0"; saw=2; next }
                                  { print }
              END             { if ( saw==1 ) print "enabled=0" }
            ' "$F" > "$F.bootstrap.tmp" &amp;&amp; mv "$F.bootstrap.tmp" "$F"
            test -f  "$F.bootstrap.tmp" &amp;&amp; {
              echo "*** Error: Failed to process '$F'; check manually if all repos inside are disabled."
              rm "$F.bootstrap.tmp"
            }
          done
    fi
fi
if [ $FULLY_UPDATE_THIS_BOX -eq 1 ] ; then
    if [ "$INSTALLER" == zypper ] ; then
        echo "zypper --non-interactive up zypper zypp-plugin-spacewalk; rhn-profile-sync; zypper --non-interactive up (conditional)"
    elif [ "$INSTALLER" == yum ] ; then
        echo "yum -y upgrade yum yum-rhn-plugin; rhn-profile-sync; yum upgrade (conditional)"
    else
        echo "up2date up2date; up2date -p; up2date -uf (conditional)"
    fi
else
    if [ "$INSTALLER" == zypper ] ; then
        echo "zypper --non-interactive up zypper zypp-plugin-spacewalk; rhn-profile-sync"
    elif [ "$INSTALLER" == yum ] ; then
        echo "yum -y upgrade yum yum-rhn-plugin; rhn-profile-sync"
    else
        echo "up2date up2date; up2date -p"
    fi
fi
echo "but any post configuration action can be added here.  "
echo "------------------------------------------------------"
if [ $FULLY_UPDATE_THIS_BOX -eq 1 ] ; then
    echo "* completely updating the box"
else
    echo "* ensuring $INSTALLER itself is updated"
fi
if [ "$INSTALLER" == zypper ] ; then
    zypper lr -u
    zypper --non-interactive ref -s
    zypper --non-interactive up zypper zypp-plugin-spacewalk
    if [ -x /usr/sbin/rhn-profile-sync ] ; then
        /usr/sbin/rhn-profile-sync
    else
        echo "Error updating system info in SUSE Manager Server."
        echo "    Please ensure that rhn-profile-sync in installed and rerun it."
    fi
    if [ $FULLY_UPDATE_THIS_BOX -eq 1 ] ; then
        zypper --non-interactive up
    fi
elif [ "$INSTALLER" == yum ] ; then
    yum repolist
    /usr/bin/yum -y upgrade yum yum-rhn-plugin
    if [ -x /usr/sbin/rhn-profile-sync ] ; then
        /usr/sbin/rhn-profile-sync
    else
        echo "Error updating system info in SUSE Manager Server."
        echo "    Please ensure that rhn-profile-sync in installed and rerun it."
    fi
    if [ $FULLY_UPDATE_THIS_BOX -eq 1 ] ; then
        /usr/bin/yum -y upgrade
    fi
else
    /usr/sbin/up2date up2date
    /usr/sbin/up2date -p
    if [ $FULLY_UPDATE_THIS_BOX -eq 1 ] ; then
        /usr/sbin/up2date -uf
    fi
fi
echo "-bootstrap complete-"
</screen>    
    






  </sect1>


  <sect1 xml:id="sec.conclusion">
    <title>Conclusion</title>

    <para>With SUSE Linux Enterprise, all the tools to monitor and tune a workload are readily
      available. Your customers can extract the maximum performance and reliability running their
      applications, either on bare metal or virtualized, on the EPYC platform.</para>


  </sect1>

  <sect1 xml:id="sec.resources">
    <title>Resources</title>

    <para>For more information, refer to:</para>

    <itemizedlist>
      <listitem>
        <para>AMD SenseMI Technology (<link
            xlink:href="https://www.amd.com/en/technologies/sense-mi"
            >https://www.amd.com/en/technologies/sense-mi</link>)</para>
      </listitem>
      <listitem>
        <para>Balanced power plan optimized for AMD Ryzen processors (<link
            xlink:href="https://community.amd.com/community/gaming/blog/2017/04/06/amd-ryzen-community-update-3"
            >https://community.amd.com/community/gaming/blog/2017/04/06/amd-ryzen-community-update-3</link></para>
      </listitem>
      <listitem>
        <para>EPYC Tech Day: Gerry Talbot (<link
            xlink:href="https://www.youtube.com/watch?v=W5IhEit6NqY"
            >https://www.youtube.com/watch?v=W5IhEit6NqY</link>)</para>
      </listitem>
      <listitem>
        <para>Optimizing Linux for Dual-Core AMD Opteron Processors (<link
            xlink:href="http://www.novell.com/traininglocator/partners/amd/4622016.pdf"
            >http://www.novell.com/traininglocator/partners/amd/4622016.pdf</link>)</para>
      </listitem>
      <listitem>
        <para>Systems Performance: Enterprise and the Cloud by Brendan Gregg (<link
            xlink:href="http://www.brendangregg.com/sysperfbook.html"
            >http://www.brendangregg.com/sysperfbook.html</link>)</para>
      </listitem>
      <listitem>
        <para>NASA Parallel Benchmark (<link
            xlink:href="https://www.nas.nasa.gov/publications/npb.html"
            >https://www.nas.nasa.gov/publications/npb.html</link>)</para>
      </listitem>
    </itemizedlist>

  </sect1>



  <sect1 xml:id="sec.appendix_a">
    <title>Appendix A</title>

    <para>Example of a VM configuration file:</para>

    <screen>
  &lt;domain type='kvm' xmlns:qemu='http://libvirt.org/schemas/domain/qemu/1.0'>  
  &lt;name>sles12sp3_01&lt;/name>
    &lt;uuid>26137bb8-9e5f-48e9-a81d-63ae36400196&lt;/uuid>
    &lt;memory unit='KiB'>209715200&lt;/memory>
    &lt;currentMemory unit='KiB'>209715200&lt;/currentMemory>
    &lt;memoryBacking>
      &lt;hugepages>
        &lt;page size='1048576' unit='KiB'/>
      &lt;/hugepages>
      &lt;nosharepages/>
    &lt;/memoryBacking>
    &lt;vcpu placement='static'>96&lt;/vcpu>
    &lt;cputune>
      &lt;vcpupin vcpu='0' cpuset='1'/>
      &lt;vcpupin vcpu='1' cpuset='65'/>
      &lt;vcpupin vcpu='2' cpuset='2'/>
      &lt;vcpupin vcpu='3' cpuset='66'/>
      &lt;vcpupin vcpu='4' cpuset='3'/>
      &lt;vcpupin vcpu='5' cpuset='67'/>
      &lt;vcpupin vcpu='6' cpuset='4'/>
      &lt;vcpupin vcpu='7' cpuset='68'/>
      &lt;vcpupin vcpu='8' cpuset='5'/>
      &lt;vcpupin vcpu='9' cpuset='69'/>
      &lt;vcpupin vcpu='10' cpuset='6'/>
      &lt;vcpupin vcpu='11' cpuset='70'/>
      &lt;vcpupin vcpu='12' cpuset='9'/>
      &lt;vcpupin vcpu='13' cpuset='73'/>
      &lt;vcpupin vcpu='14' cpuset='10'/>
      &lt;vcpupin vcpu='15' cpuset='74'/>
      &lt;vcpupin vcpu='16' cpuset='11'/>
      &lt;vcpupin vcpu='17' cpuset='75'/>
      &lt;vcpupin vcpu='18' cpuset='12'/>
      &lt;vcpupin vcpu='19' cpuset='76'/>
      &lt;vcpupin vcpu='20' cpuset='13'/>
      &lt;vcpupin vcpu='21' cpuset='77'/>
      &lt;vcpupin vcpu='22' cpuset='14'/>
      &lt;vcpupin vcpu='23' cpuset='78'/>
      &lt;vcpupin vcpu='24' cpuset='17'/>
      &lt;vcpupin vcpu='25' cpuset='81'/>
      &lt;vcpupin vcpu='26' cpuset='18'/>
      &lt;vcpupin vcpu='27' cpuset='82'/>
      &lt;vcpupin vcpu='28' cpuset='19'/>
      &lt;vcpupin vcpu='29' cpuset='83'/>
      &lt;vcpupin vcpu='30' cpuset='20'/>
      &lt;vcpupin vcpu='31' cpuset='84'/>
      &lt;vcpupin vcpu='32' cpuset='21'/>
      &lt;vcpupin vcpu='33' cpuset='85'/>
      &lt;vcpupin vcpu='34' cpuset='22'/>
      &lt;vcpupin vcpu='35' cpuset='86'/>
      &lt;vcpupin vcpu='36' cpuset='25'/>
      &lt;vcpupin vcpu='37' cpuset='89'/>
      &lt;vcpupin vcpu='38' cpuset='26'/>
      &lt;vcpupin vcpu='39' cpuset='90'/>
      &lt;vcpupin vcpu='40' cpuset='27'/>
      &lt;vcpupin vcpu='41' cpuset='91'/>
      &lt;vcpupin vcpu='42' cpuset='28'/>
      &lt;vcpupin vcpu='43' cpuset='92'/>
      &lt;vcpupin vcpu='44' cpuset='29'/>
      &lt;vcpupin vcpu='45' cpuset='93'/>
      &lt;vcpupin vcpu='46' cpuset='30'/>
      &lt;vcpupin vcpu='47' cpuset='94'/>
      &lt;vcpupin vcpu='48' cpuset='33'/>
      &lt;vcpupin vcpu='49' cpuset='97'/>
      &lt;vcpupin vcpu='50' cpuset='34'/>
      &lt;vcpupin vcpu='51' cpuset='98'/>
      &lt;vcpupin vcpu='52' cpuset='35'/>
      &lt;vcpupin vcpu='53' cpuset='99'/>
      &lt;vcpupin vcpu='54' cpuset='36'/>
      &lt;vcpupin vcpu='55' cpuset='100'/>
      &lt;vcpupin vcpu='56' cpuset='37'/>
      &lt;vcpupin vcpu='57' cpuset='101'/>
      &lt;vcpupin vcpu='58' cpuset='38'/>
      &lt;vcpupin vcpu='59' cpuset='102'/>
      &lt;vcpupin vcpu='60' cpuset='41'/>
      &lt;vcpupin vcpu='61' cpuset='105'/>
      &lt;vcpupin vcpu='62' cpuset='42'/>
      &lt;vcpupin vcpu='63' cpuset='106'/>
      &lt;vcpupin vcpu='64' cpuset='43'/>
      &lt;vcpupin vcpu='65' cpuset='107'/>
      &lt;vcpupin vcpu='66' cpuset='44'/>
      &lt;vcpupin vcpu='67' cpuset='108'/>
      &lt;vcpupin vcpu='68' cpuset='45'/>
      &lt;vcpupin vcpu='69' cpuset='109'/>
      &lt;vcpupin vcpu='70' cpuset='46'/>
      &lt;vcpupin vcpu='71' cpuset='110'/>
      &lt;vcpupin vcpu='72' cpuset='49'/>
      &lt;vcpupin vcpu='73' cpuset='113'/>
      &lt;vcpupin vcpu='74' cpuset='50'/>
      &lt;vcpupin vcpu='75' cpuset='114'/>
      &lt;vcpupin vcpu='76' cpuset='51'/>
      &lt;vcpupin vcpu='77' cpuset='115'/>
      &lt;vcpupin vcpu='78' cpuset='52'/>
      &lt;vcpupin vcpu='79' cpuset='116'/>
      &lt;vcpupin vcpu='80' cpuset='53'/>
      &lt;vcpupin vcpu='81' cpuset='117'/>
      &lt;vcpupin vcpu='82' cpuset='54'/>
      &lt;vcpupin vcpu='83' cpuset='118'/>
      &lt;vcpupin vcpu='84' cpuset='57'/>
      &lt;vcpupin vcpu='85' cpuset='121'/>
      &lt;vcpupin vcpu='86' cpuset='58'/>
      &lt;vcpupin vcpu='87' cpuset='122'/>
      &lt;vcpupin vcpu='88' cpuset='59'/>
      &lt;vcpupin vcpu='89' cpuset='123'/>
      &lt;vcpupin vcpu='90' cpuset='60'/>
      &lt;vcpupin vcpu='91' cpuset='124'/>
      &lt;vcpupin vcpu='92' cpuset='61'/>
      &lt;vcpupin vcpu='93' cpuset='125'/>
      &lt;vcpupin vcpu='94' cpuset='62'/>
      &lt;vcpupin vcpu='95' cpuset='126'/>
    &lt;/cputune>
    &lt;numatune>
      &lt;memory mode='strict' nodeset='0-7'/>
      &lt;memnode cellid='0' mode='strict' nodeset='0'/>
      &lt;memnode cellid='1' mode='strict' nodeset='1'/>
      &lt;memnode cellid='2' mode='strict' nodeset='2'/>
      &lt;memnode cellid='3' mode='strict' nodeset='3'/>
      &lt;memnode cellid='4' mode='strict' nodeset='4'/>
      &lt;memnode cellid='5' mode='strict' nodeset='5'/>
      &lt;memnode cellid='6' mode='strict' nodeset='6'/>
      &lt;memnode cellid='7' mode='strict' nodeset='7'/>
    &lt;/numatune>
    &lt;os>
      &lt;type arch='x86_64' machine='pc-i440fx-2.9'>hvm&lt;/type>
      &lt;boot dev='hd'/>
    &lt;/os>
    &lt;features>
      &lt;acpi/>
      &lt;apic/>
    &lt;/features>
    &lt;cpu mode='host-passthrough' check='none'>
      &lt;topology sockets='8' cores='6' threads='2'/>
      &lt;numa>
        &lt;cell id='0' cpus='0-11' memory='26214400' unit='KiB'/>
        &lt;cell id='1' cpus='12-23' memory='26214400' unit='KiB'/>
        &lt;cell id='2' cpus='24-35' memory='26214400' unit='KiB'/>
        &lt;cell id='3' cpus='36-47' memory='26214400' unit='KiB'/>
        &lt;cell id='4' cpus='48-59' memory='26214400' unit='KiB'/>
        &lt;cell id='5' cpus='60-71' memory='26214400' unit='KiB'/>
        &lt;cell id='6' cpus='72-83' memory='26214400' unit='KiB'/>
        &lt;cell id='7' cpus='84-95' memory='26214400' unit='KiB'/>
      &lt;/numa>
    &lt;/cpu>
    ...
    &lt;devices>
      &lt;emulator>/usr/bin/qemu-kvm&lt;/emulator>
      &lt;disk type='file' device='disk'>
        &lt;driver name='qemu' type='qcow2'/>
        &lt;source file='/home/sles12sp3_01.img'/>
        &lt;target dev='vda' bus='virtio'/>
        &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x0'/>
      &lt;/disk>
      ...
      &lt;interface type='network'>
        &lt;mac address='52:54:00:9e:08:44'/>
        &lt;source network='default'/>
        &lt;model type='virtio'/>
        &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0'/>
      &lt;/interface>
      ...
      &lt;rng model='virtio'>
        &lt;backend model='random'>/dev/urandom&lt;/backend>
        &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x07' function='0x0'/>
      &lt;/rng>
    &lt;/devices>
    &lt;qemu:commandline>
      &lt;qemu:arg value='-cpu'/>
      &lt;qemu:arg value='host,migratable=off,+invtsc,l3-cache=on'/>
    &lt;/qemu:commandline>
  &lt;/domain>
</screen>

  </sect1>

  <sect1 xml:id="sec.legal_notice">
    <title>Legal Notice</title>
    <para>Copyright &copy;2006–2018 SUSE LLC and contributors. All rights reserved. </para>
    <para>Permission is granted to copy, distribute and/or modify this document under the terms of
      the GNU Free Documentation License, Version 1.2 or (at your option) version 1.3; with the
      Invariant Section being this copyright notice and license. A copy of the license version 1.2
      is included in the section entitled <quote>GNU Free Documentation License</quote>.</para>
    <para>SUSE, the SUSE logo and YaST are registered trademarks of SUSE LLC in the United States
      and other countries. For SUSE trademarks, see <link
        xlink:href="http://www.suse.com/company/legal/">http://www.suse.com/company/legal/</link>.
      Linux is a registered trademark of Linus Torvalds. All other names or trademarks mentioned in
      this document may be trademarks or registered trademarks of their respective owners.</para>
    <para>This article is part of a series of documents called "SUSE Best Practices". The individual
      documents in the series were contributed voluntarily by SUSE's employees and by third
      parties.</para>
    <!--  <para>The articles are intended only to be one example of how a particular action could be
      taken. They should not be understood to be the only action and certainly not to be the
      action recommended by SUSE. Also, SUSE cannot verify either that the actions described
      in the articles do what they claim to do or that they don't have unintended
      consequences.</para>-->
    <para> All information found in this article has been compiled with utmost attention to detail.
      However, this does not guarantee complete accuracy.
      <!--Neither SUSE LLC, the authors, nor the translators shall be held liable
        for possible errors or the consequences thereof. --></para>
    <para>Therefore, we need to specifically state that neither SUSE LLC, its affiliates, the
      authors, nor the translators may be held liable for possible errors or the consequences
      thereof. Below we draw your attention to the license under which the articles are
      published.</para>
  </sect1>

  <?pdfpagebreak style="suse2013" formatter="fop"?>
  <xi:include href="license-gfdl.xml"/>
</article>
