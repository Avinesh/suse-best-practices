<?xml version="1.0" encoding="UTF-8"?>
<!--<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>-->
<!DOCTYPE article [
<!ENTITY % entity SYSTEM "entity-decl.ent">
%entity;
]>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="art.sbp.perf.tuning"
    xml:lang="en">
    <info>
        <title>Performance Analysis, Tuning and Tools on SUSE Linux Enterprise Products</title>
        <subtitle/>
        <orgname>SUSE Best Practices</orgname>
        <productname>SUSE Linux Enterprise</productname>
        <!--<productname>SUSE Linux Enterprise Server</productname>-->
        <productnumber/>
        <author>
            <!-- <personname>
                <firstname>Marco</firstname>
                <surname>Varlese, Software Engineer,
                    SUSE</surname>
            </personname>-->
            <personname>
                <firstname>Marco</firstname>
                <surname>Varlese</surname>
            </personname>
            <affiliation>
                <jobtitle>Software Engineer</jobtitle>
                <orgname>SUSE</orgname>
            </affiliation>
        </author>
        <date><?dbtimestamp format="B d, Y" ?></date>


        <abstract>

            <para>This document describes how to configure and tune a SUSE Linux Enterprise based
                system to get the best possible performance out of it. We will go through different
                layers, from BIOS settings to kernel parameters to show you what can be changed and
                how. </para>

            <para>On the other hand, this document does not describe the networking solutions to
                reach very high throughput on Linux systems (for example DPDK) by-passing the Linux
                kernel stack entirely. This document focuses solely on the standard Linux kernel
                infrastructure.</para>

        </abstract>

    </info>


    <sect1 xml:id="sec.intro">

        <title>Introduction</title>

        <para>With the evolution of computer architecture, performance has reached results which
            were unimaginable just a few years ago. However, the complexity of modern computer
            architectures requires end-users and developers to know how to write code, and how to
            configure and deploy software for a specific architecture to get the most out of
            it.</para>

        <para>This document focuses on fine tuning a SUSE Linux Enterprise system. It covers
            settings and parameters configurable on SUSE Linux Enterprise software offerings, NIC
            settings and some BIOS settings which are common to most hardware vendors.</para>

        <para>Performance tuning is hard and general recommendations are tricky. This document tries
            to provide an insight on the knobs which the Linux kernel allows to configure and which
            can have an impact on the overall system performance (throughput vs latency). While
            various settings are described, some examples of potential values to be usedn are
            provided. However, those values need to be considered relatively to the others for the
            different profiles and not necessarily as absolute values to be used. </para>

        <para>This document does not and cannot provide a generic rule-of-thumb (or values) to be
            used for performance tuning since eventually, the finest tuning of those parameters
            requires a thorough understanding of the workloads and the hardware it runs on.</para>

    </sect1>


    <sect1 xml:id="sec.bios_setup">

        <title>BIOS Setup</title>

        <para>The BIOS is the foundation and the first level of tuning which can have an impact on
            the performance of your overall system. </para>

        <para>The BIOS controls the voltage (and hence frequency) which components like CPU and RAM
            run at, and it allows you to enable or disable specific CPU features which can have a
            profound impact not only on system performance but also on power usage.</para>

        <para>The first things to be known are the states at which a CPU can be in when performing
            its duties.</para>

        <para>There are two sets of states (or modes): the C-states and P-states. C-states are idle
            states while P-states are operational states.</para>

        <para>Aside from the C0 state, which is the only one where the CPU is actually busy doing
            work, all other C-states are idle states. The basic idea behind C-states is that when a
            CPU is not doing any useful work it is better to “shut it down”. This helps reducing
            power usage which for an electrical component like the CPU means extending its life-time
            expectancy, too.</para>

        <para>On the other hand, P-states control the operational state of the CPU when it is doing
            some useful work. For instance, even if the CPU / core is in C0 state that does not mean
            it has to run at its maximum speed. A very basic example is when using the laptop in
            battery mode: the CPU will enter a higher P-state hence reducing the frequency at which
            the CPU / core runs at to minimize power consumption.</para>

        <para>This document does not go into the details of each C/P-state, but some very thorough
            explanation can be found at:</para>

        <itemizedlist>
            <listitem>
                <para>http://www.hardwaresecrets.com/everything-you-need-to-know-about-the-cpu-c-states-power-saving-modes/</para>
            </listitem>
            <listitem>
                <para>https://software.intel.com/en-us/blogs/2008/03/12/c-states-and-p-states-are-very-different</para>
            </listitem>
            <listitem>
                <para>https://haypo.github.io/intel-cpus.html</para>
            </listitem>
            <listitem>
                <para>https://github.com/HewlettPackard/LinuxKI/wiki/Power-vs-Performance</para>
            </listitem>
            <listitem>
                <para>https://people.cs.pitt.edu/~kirk/cs3150spring2010/ShiminChen.pptx</para>
            </listitem>

        </itemizedlist>

        <para>Whether to enable or disable C/P-states for greater throughput or lower latency
            depends a lot on the use case. For instance, in some ultra-low latency applications it
            is very beneficial to disable the CPU C-states since being always in C0-state there is
            no overhead to resume to start doing real work. </para>

        <para>Similarly, for certain use cases where you want to predict the amount of work
            performed by the CPU in a given amount of time, it is beneficial to set the CPU
            frequency to always run at a certain speed (for example 3Ghz) and still allow Turbo
            Boost.</para>

        <sect2 xml:id="sec.cpupower_tool">
            <title>Cpupower Tool</title>

            <para>In that case you can use the <emphasis role="bold">cpupower</emphasis> tool to
                read the supported CPU frequency and set the required one. To install the tool run
                the command <command>zypper in cpupower</command>.</para>

            <para>As an example, if you run the command <command># cpupower
                frequency-info</command>, you can read some important information from the
                output:</para>

            <screen>hardware limits: 1.20 GHz - 2.20 GHz</screen>

            <para>This represents the frequency range supported by the CPU.</para>

            <screen>available frequency steps:  2.20 GHz, 2.10 GHz, 2.00 GHz, 1.90 GHz, 1.80 GHz, 
1.70 GHz, 1.60 GHz, 1.50 GHz, 1.40 GHz, 1.30 GHz, 1.20 GHz</screen>

            <para>This represents the values which the frequency can be set to if manually
                set.</para>

            <screen>available cpufreq governors: userspace ondemand performance</screen>

            <para>This represent the available <emphasis role="bold">governors</emphasis> supported
                by the kernel: <emphasis role="bold">userspace</emphasis> allows the frequency to be
                set manually, <emphasis role="bold">ondemand</emphasis> allows the CPU to run at
                different speed depending on the workloads and <emphasis role="bold"
                    >performance</emphasis> sets the CPU frequency to the maximum allowed.</para>

            <screen>current CPU frequency: 1.70 GHz (asserted by call to hardware)</screen>

            <para>This shows the frequency at which the CPU is currently running.</para>

            <screen>boost state support:
Supported: yes
Active: no/</screen>

            <para>This shows whether Turbo Boost is supported by your CPU and if it is enabled or
                disabled.</para>

            <note>
                <title>Disabled P-states</title>

                <para>If P-states are disabled then automatically Turbo Boost is not supported. This
                    means the row <emphasis role="bold">Supported:</emphasis> above will always show
                        <emphasis role="bold">no</emphasis> and consequentially it will not be
                    possible to enable it either. </para>

                <para>Similarly, when P-states are enabled and managed by the intel_pstate driver
                    (Intel CPUs), then the <emphasis role="bold">userspace</emphasis> governor is
                    not supported. This means it is not possible to manually set a specific
                    frequency. Currently, the only two governors supported by the intel_pstate
                    driver are <emphasis role="bold">performance</emphasis> and <emphasis
                        role="bold">ondemand</emphasis>.</para>

                <para>To disable P-states on Intel platform it is sufficient to append <emphasis
                        role="bold">intel_pstate=disable</emphasis> to the kernel boot
                    parameters.</para>
            </note>

            <para>Where Turbo Boost is supported, you can enable it by:</para>
            <para>
                <command># echo 0 > /sys/devices/system/cpu/intel_pstate/no_turbo</command>
            </para>

            <para>or disable it by</para>
            <para>
                <command># echo 1 > /sys/devices/system/cpu/intel_pstate/no_turbo</command>
            </para>

            <para>In order to set a specific governor run the command:</para>
            <para><command># cpupower frequency-set -g userspace</command> (set the governor to
                    <emphasis role="bold">userspace</emphasis>)</para>
            <para><command># cpupower frequency-set -g ondemand</command> (set the governor to
                    <emphasis role="bold">ondemand</emphasis>)</para>
            <para><command># cpupower frequency-set -g performance</command> (set the governor to
                    <emphasis role="bold">performance</emphasis>)</para>

            <para>If you want to set the CPU frequency to a particular speed, run the
                command:</para>
            <para><command># cpupower frequency-set -f [FREQUENCY]</command> (it has to be one of
                the values returned by <emphasis role="bold">cpupower frequency-info</emphasis> in
                the row <emphasis role="bold">available frequency steps</emphasis>)</para>

        </sect2>
    </sect1>

    <sect1 xml:id="sec.kernel_tuning">
        <title>Kernel Tuning</title>

        <para>The Linux Kernel provides many parameters to be tuned via the
                <application>sysctl</application> interface or the <application>proc</application>
            filesystem. The following chapters describe those settings which can have a direct
            impact on overall system performance hence values which can be used for specific
            profiles (for example high-throughput versus low-latency).</para>

        <sect2 xml:id="sec.io_scheduler_tuning">
            <title>I/O Scheduler Tuning</title>

            <para>The first setting which has a direct impact on I/O performance is the I/O
                scheduler chosen for your device. The I/O scheduler can be defined for each device.
                This means the Linux kernel allows you to use different scheduling policies for
                different devices. This can be very convenient on systems where different
                hard-drives perform different duties, thus different policies among them may make
                sense.</para>

            <para>To retrieve or change the value of the I/O scheduler you can access the file at
                    <filename>/sys/block/sda/queue/scheduler</filename>.</para>

            <para>On SUSE Linux Enterprise based distributions you can chose among three different
                scheduling algorithms to be assigned to each device: <emphasis role="bold"
                    >noop</emphasis>, <emphasis role="bold">cfq</emphasis> and <emphasis role="bold"
                    >deadline</emphasis>.</para>

            <para>The Complete Fair Queuing (CFQ) is a fairness-oriented scheduler and is the
                default algorithm used by the kernel. The algorithm is based on the use of a time
                slice in which it is allowed to perform I/O on the disk.</para>

            <para>To enable the CFQ scheduler, type <command>echo cfq >
                    /sys/block/sda/queue/scheduler</command>.</para>

            <para>On the other hand, the DEADLINE algorithm is a latency-oriented I/O scheduler
                where each request is assigned a target deadline. In all those cases where several
                threads are performing reads or writes this algorithm offers greater throughput as
                long as fairness is not a requirement.</para>

            <para>To enable the DEADLINE scheduler, type <command>echo deadline >
                    /sys/block/sda/queue/scheduler</command>.</para>

            <para>Finally, the NOOP algorithm is the simplest of the three. It basically performs
                any I/O which is sent to the scheduler without any complex scheduling. We recommend
                to use it on those systems where storage devices can perform scheduling themselves
                hence this algorithm avoids competition between the storage device and the CPU which
                is trying to perform any scheduling. It is also recommended in virtual machines
                which do not have a direct access to the storage device since virtualised by the
                hypervisor.</para>

            <para>To enable the NOOP scheduler, type <command>echo noop >
                    /sys/block/sda/queue/scheduler</command>.</para>

        </sect2>

        <sect2 xml:id="sec.task_sched_tuning">
            <title>Task Scheduler Tuning</title>

            <para>Basic aspects and configuration of the Linux kernel task scheduler are performed
                during the kernel configuration and compilation. This document does not cover those
                details. It rather covers some of the <application>sysctl</application> settings
                which can have an impact on throughput or latency of the system involved with packet
                processing.</para>

            <para>The default Linux kernel scheduler is the Complete Fair Scheduler (CFS) which
                accumulates a <quote>virtual runtime</quote> (vruntime). When a new task has to be
                picked it is always the task with the minimum accumulated <emphasis role="bold"
                    >vruntime</emphasis>.</para>

            <para>There are few scheduling policies to be assigned to running processes:</para>

            <itemizedlist>
                <listitem>
                    <para><emphasis role="bold">SCHED_OTHER</emphasis>: is the default Linux
                        scheduling policy</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">SCHED_FIFO</emphasis>: uses the First In First Out
                        algorithm and is usually used for some time-critical applications</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">SCHED_RR</emphasis>: is similar to the SCHED_FIFO
                        policy but it is implemented using a Round Robin algorithm</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">SCHED_BATCH</emphasis>: is designed for
                        CPU-intensive applications which may require to get hold of the CPU for
                        longer time to complete</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">SCHED_IDLE</emphasis>: is designed for low priority
                        tasks which may run seldom or that are not time-critical</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">SCHED_DEADLINE</emphasis>: is designed to make a
                        task complete within a given deadline very similarly to the I/O deadline
                        scheduler</para>
                </listitem>
            </itemizedlist>

            <para>It is possible to assign processes with different policies using the tool
                    <application>chrt</application> (shipped with the util-linux package). The same
                tool can be used to retrieve information about running processes and priorities
                supported for each of the policy supported.</para>

            <para>In the example below, you can retrieve valid priorities for the various scheduling
                policies:</para>

            <screen>
# chrt -m
SCHED_SCHED_OTHER min/max priority	: 0/0
SCHED_SCHED_FIFO min/max priority	: 1/99
SCHED_SCHED_RR min/max priority	: 1/99
SCHED_SCHED_BATCH min/max priority	: 0/0
SCHED_SCHED_IDLE min/max priority	: 0/0
SCHED_SCHED_DEADLINE min/max priority	: 0/0   
</screen>

            <para>Based on the above priorities you can set – for example – a process with the
                SCHED_FIFO policy and a priority of 1:</para>

            <screen># chrt -f -p 1 &lt;PID></screen>

            <para>Or you can set a SCHED_BATCH policy with a priority of 0:</para>

            <screen># chrt -b -p 0 &lt;PID></screen>

            <para>The following <application>sysctl</application> settings can have a direct impact
                on throughput and latency:</para>

            <itemizedlist>
                <listitem>
                    <para><emphasis role="italic">kernel.sched_min_granularity_ns</emphasis>
                        represents the minimal preemption granularity for CPU bound tasks. See
                            <emphasis role="bold">sched_latency_ns</emphasis> for details. The
                        default value is 4000000 nanoseconds.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="italic">kernel.sched_wakeup_granularity_ns</emphasis>
                        represents the wake-up preemption granularity. Increasing this variable
                        reduces wake-up preemption, reducing disturbance of compute bound tasks.
                        Lowering it improves wake-up latency and throughput for latency critical
                        tasks, particularly when a short duty cycle load component must compete with
                        CPU bound components. The default value is 2500000 nanoseconds.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="italic">kernel.sched_migration_cost_ns</emphasis> is the
                        amount of time after the last execution that a task is considered to be
                        “cache hot” in migration decisions. A “hot” task is less likely to be
                        migrated to another CPU, so increasing this variable reduces task
                        migrations. The default value is 500000 nanoseconds. If the CPU idle time is
                        higher than expected when there are runnable processes, try reducing this
                        value. If tasks bounce between CPUs or nodes too often, try increasing
                        it.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="italic">kernel.numa_balancing</emphasis> is a boolean flag
                        which enables or disables automatica NUMA balacing of processes / threads.
                        Automatic NUMA balancing uses a number of algorithms and data structures,
                        which are only active and allocated if automatic NUMA balancing is active on
                        the system.</para>
                </listitem>
            </itemizedlist>

            <para>Find below examples for a possible comparison for the three values across
                different performance profiles.</para>


            <table>
                <title>Kernel Tuning - Comparison</title>
                <tgroup cols="4">
                    <colspec colwidth="3.3*"/>
                    <colspec colwidth="1.0*"/>
                    <colspec colwidth="2.0*"/>
                    <colspec colwidth="1.5*"/>
                    <thead>
                        <row>
                            <entry/>
                            <entry>Balanced</entry>
                            <entry>Higher Throughput</entry>
                            <entry>Lower Latency</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <para>
                                    <emphasis role="italic"
                                        >kernel.sched_min_granularity_ns</emphasis>
                                </para>
                            </entry>
                            <entry>
                                <para>2,250,000</para>
                            </entry>
                            <entry>
                                <para>10,000,000</para>
                            </entry>
                            <entry>
                                <para>10,000,000</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para>
                                    <emphasis role="italic"
                                        >kernel.sched_wakeup_granularity_ns</emphasis>
                                </para>
                            </entry>
                            <entry>
                                <para>3,000,000</para>
                            </entry>
                            <entry>
                                <para>15,000,000</para>
                            </entry>
                            <entry>
                                <para>1,000,000</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para>
                                    <emphasis role="italic"
                                        >kernel.sched_migration_cost_ns</emphasis>
                                </para>
                            </entry>
                            <entry>
                                <para>500,000</para>
                            </entry>
                            <entry>
                                <para>250,000</para>
                            </entry>
                            <entry>
                                <para>5,000,000</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para>
                                    <emphasis role="italic">kernel.numa_balancing</emphasis>
                                </para>
                            </entry>
                            <entry>
                                <para>1</para>
                            </entry>
                            <entry>
                                <para>0</para>
                            </entry>
                            <entry>
                                <para>0</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para>
                                    <emphasis role="italic">kernel.pid_max</emphasis>
                                </para>
                            </entry>
                            <entry>
                                <para>32,768</para>
                            </entry>
                            <entry>
                                <para>1024 * NUMBER_OF_CPUS</para>
                            </entry>
                            <entry>
                                <para>32,768</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>

        </sect2>

        <sect2 xml:id="sec.memory_man_tuning">
            <title>Memory Manager Tuning</title>

            <para>The Linux kernel stages disk writes into cache, and over time asynchronously
                flushes them to disk. In addition, there is the chance that a lot of I/O will
                overwhelm the cache, too. The Linux kernel allows you – via the
                    <command>sysctl</command> command – to tune how much data to keep in RAM before
                swapping it out to disk and various other settings as described below.</para>

            <itemizedlist>
                <listitem>
                    <para><emphasis role="italic">vm.dirty_ratio</emphasis> is the absolute maximum
                        amount of system memory (here expressed as a percentage) that can be filled
                        with dirty pages before everything must get committed to disk. When the
                        system gets to this point all new I/O blocks until dirty pages have been
                        written to disk. This is often the source of long I/O pauses, but is a
                        safeguard against too much data being cached unsafely in memory. (<emphasis
                            role="italic">vm.dirty_bytes</emphasis> is preferable).</para>
                </listitem>
            </itemizedlist>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="italic">vm.dirty_bytes</emphasis> is the amount of dirty
                        memory at which a process generating disk writes will itself start
                        write-back. </para>
                    <note>
                        <title><emphasis role="italic">dirty_bytes</emphasis> and <emphasis
                                role="italic">dirty_ratio</emphasis></title>
                        <para><emphasis role="italic">dirty_bytes</emphasis> is the counterpart of
                                <emphasis role="italic">dirty_ratio</emphasis>. Only one of them may
                            be specified at a time. When one <command>sysctl</command> is written it
                            is immediately taken into account to evaluate the dirty memory limits
                            and the other appears as 0 when read. The minimum value allowed for
                                <emphasis role="italic">dirty_bytes</emphasis> is two pages (in
                            bytes). Any value lower than this limit will be ignored and the old
                            configuration will be retained.</para>
                    </note>

                </listitem>
            </itemizedlist>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="italic">vm.dirty_background_ratio</emphasis> is the
                        percentage of system memory that can be filled with <quote>dirty</quote>
                        pages – memory pages that still need to be written to disk – before the
                        pdflush/flush/kdmflush background processes kick in to write it to disk. For
                        example, if you set this value to 10 (it means 10%), and your server has 256
                        GB of memory, then 25.6 GB of data could be sitting in RAM before something
                        is done. (<emphasis role="italic">vm.dirty_background_bytes is
                            preferable</emphasis>).</para>
                </listitem>
            </itemizedlist>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="italic">vm.dirty_background_bytes</emphasis> is the amount
                        of dirty memory at which the background kernel flusher threads will start
                        write-back. This setting is the counterpart of dirty_background_ratio. Only
                        one of them may be specified at a time. When one sysctl is written it is
                        immediately taken into account to evaluate the dirty memory limits and the
                        other appears as 0 when read. It is – in some scenarios – a better and safer
                        setting to be used vs its counterpart since it allows to provide a finer
                        tuning on the amount of memory (for example, 1% of 256 GB = 2.56 GB might
                        already be too much for some scenarios).</para>
                </listitem>
            </itemizedlist>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="italic">vm.swappiness</emphasis>: The kernel buffers
                        always stay in main memory, because they have to. Applications and cache
                        however do not need to stay in RAM. The cache can be dropped, and the
                        applications can be paged out to the swap file. Dropping cache means a
                        potential performance hit. Likewise with paging applications out. This
                        parameter helps the kernel decide what to do. By setting it to the maximum
                        of 100 the kernel will swap very aggressively. By setting it to 0 the kernel
                        will only swap to protect against an out-of-memory condition. The default is
                        60 which means that some swapping will occur.</para>
                </listitem>
            </itemizedlist>

            <para>Find below examples for a possible comparison for the three values across
                different performance profiles.</para>


            <table>
                <title>Memory Manager Tuning - Comparison</title>
                <tgroup cols="4">
                    <colspec colwidth="2.8*"/>
                    <colspec colwidth="1.5*"/>
                    <colspec colwidth="2.0*"/>
                    <colspec colwidth="1.5*"/>
                    <thead>
                        <row>
                            <entry/>
                            <entry>Balanced</entry>
                            <entry>Higher Throughput</entry>
                            <entry>Lower Latency</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <para>
                                    <emphasis role="italic">vm.dirty_ratio</emphasis>
                                </para>
                            </entry>
                            <entry>
                                <para>20</para>
                            </entry>
                            <entry>
                                <para>40</para>
                            </entry>
                            <entry>
                                <para>10</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para>
                                    <emphasis role="italic">vm.dirty_background_ratio</emphasis>
                                </para>
                            </entry>
                            <entry>
                                <para>10</para>
                            </entry>
                            <entry>
                                <para>10</para>
                            </entry>
                            <entry>
                                <para>3</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para>
                                    <emphasis role="italic">vm.dirty_bytes</emphasis>
                                </para>
                            </entry>
                            <entry>
                                <para>16,384</para>
                            </entry>
                            <entry>
                                <para>32,768</para>
                            </entry>
                            <entry>
                                <para>8,192</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para>
                                    <emphasis role="italic">vm.dirty_background_bytes</emphasis>
                                </para>
                            </entry>
                            <entry>
                                <para>78,643,200</para>
                            </entry>
                            <entry>
                                <para>104,857,600</para>
                            </entry>
                            <entry>
                                <para>52,428,800</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para>
                                    <emphasis role="italic">vm.swappiness </emphasis>
                                </para>
                            </entry>
                            <entry>
                                <para>60</para>
                            </entry>
                            <entry>
                                <para>10</para>
                            </entry>
                            <entry>
                                <para>10</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>

        </sect2>

        <sect2 xml:id="sec.net_stack_tuning">
            <title>Networking Stack Tuning</title>

            <para>The Linux kernel allows the modification of several parameters affecting the
                networking stack. Since kernel 2.6.17 the networking stack supports full TCP
                auto-tuning, allowing the resizing of buffers automatically between a minimum and
                maximum value.</para>

            <para>This chapter goes through some of the settings which can enhance throughput and
                latency of the Linux kernel networking stack. These settings are configurable via
                the <application>sysctl</application> interface.</para>

            <sect3 xml:id="sec.net_ipv4">
                <title>net.ipv4.</title>

                <itemizedlist>
                    <listitem>
                        <para><emphasis role="italic">tcp_fastopen</emphasis> is the setting that
                            enables or disables the RFC7413 which allows to send and receive data in
                            the opening SYN packet. Enabling this option has the positive effect of
                            not losing the initial handshake packets for payload transmission. Thus
                            it maximizes network bandwidth utilization.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">tcp_lowlatency</emphasis> when enabled (value
                            set to 1) instructs the Linux kernel to make decisions that prefer
                            low-latency to high-throughput. By default this setting is disabled
                            (value set to 0). It is recommended to enable this option in profiles
                            preferring lower latency to higher throughput.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">tcp_sack</emphasis> when enabled allows to
                            select acknowledgments. By default is disabled (value set to 0). It is
                            recommended to enable this option to enhance performance.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">tcp_rmem</emphasis> is a tuple of three
                            values, representing respectively the minimum, the default and the
                            maximum size of the receive buffer used by the TCP sockets. It is
                            guaranteed to each TCP socket also under moderate memory pressure. The
                            default value in this tuple overrides the value set by the parameter
                                <emphasis role="italic">net.core.rmem_default</emphasis>.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">tcp_wmem</emphasis> is a tuple of three
                            values, representing respectively the minimum, the default and the
                            maximum size of the send buffer used by the TCP sockets. Each TCP socket
                            has the right to use it. The default value in this tuple overrides the
                            value set by the parameter <emphasis role="italic"
                                >net.core.wmem_default</emphasis>.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">ip_local_port_range</emphasis> defines the
                            local port range that is used by TCP and UDP to choose the local port.
                            The first number is the first, the second the last local port
                            number.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">tcp_max_syn_backlog</emphasis> represents the
                            maximal number of remembered connection requests, which have not
                            received an acknowledgment from connecting client. The minimal value is
                            128 for low memory machines, and it will increase in proportion to the
                            memory of machine. If the server suffers from overload, try increasing
                            this number.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">tcp_syn_retries</emphasis> is the number of
                            times a SYN is retried if no response is received. A lower value means
                            less memory usage and reduces the impact of SYN flood attacks but on
                            lossy networks a 5+ value might be worthwhile.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">tcp_tw_reuse</emphasis> allows reusing sockets
                            in TIME_WAIT state for new connections when it is safe from the protocol
                            viewpoint. It is generally a safer alternative to <emphasis
                                role="italic">tcp_tw_recycle</emphasis>, however it is disabled by
                            default (value set to 0). It is an interesting setting for servers where
                            people run services like Web-Servers or Database Servers (e.g MySQL),
                            because it allows the servers to scale faster on accepting new
                            connections (e.g. TCP SOCKET ACCEPT). Reusing the sockets can be very
                            effective in reducing server load. Because this setting is very use case
                            centric it should be used (enabled) with caution.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">tcp_tw_recycle</emphasis> enables the
                                <quote>fast recycling</quote> of TIME_WAIT sockets. The default
                            value is 0 (disabled). Some <application>sysctl</application>
                            documentation incorrectly states the default as enabled. It is known to
                            cause some issues with scenarios of load balancing and fail over when
                            enabled (value set to 1). The problem mostly effects scenarios where the
                            machine configured with this setting enabled is a server behind a device
                            performing natting. When <emphasis role="italic">recycle</emphasis> is
                            enabled, the server cannot distinguish new incoming connections from
                            different clients behind the same NAT device. Because this setting is
                            very use case centric it should be used (enabled) with caution.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">tcp_timestamps</emphasis> enables timestamps
                            as defined in RFC1323. It is enabled by default (value set to 1). Use
                            random offset for each connection rather than only using current
                            time.</para>
                    </listitem>
                </itemizedlist>

            </sect3>

            <sect3 xml:id="sec.net_core">
                <title>net.core.</title>

                <itemizedlist>
                    <listitem>
                        <para><emphasis role="italic">netdev_max_backlog</emphasis> sets the maximum
                            number of packets queued on the INPUT side when the interface receives
                            packets faster than kernel can process them.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">netdev_budget</emphasis>: if SoftIRQs do not
                            run for long enough, the rate of incoming data could exceed the kernel's
                            capability to consume the buffer fast enough. As a result, the NIC
                            buffers will overflow and traffic will be lost. Occasionally, it is
                            necessary to increase the time that SoftIRQs are allowed to run on the
                            CPU and this parameters allows that. The default value of the budget is
                            300. This will cause the SoftIRQ process to consume 300 messages from
                            the NIC before getting off the CPU.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">somaxconn</emphasis> describes the limits of
                            socket listen() backlog, known in userspace as SOMAXCONN. The default
                            value is set to 128. See also <emphasis role="italic"
                                >tcp_max_syn_backlog</emphasis> for additional tuning for TCP
                            sockets.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">busy_poll</emphasis> represents the low
                            latency busy poll timeout for poll and select. Approximate time in
                            microseconds to busy loop waiting for events. The recommended value
                            depends on the number of sockets you poll on. For several sockets use
                            the value 50, for several hundreds use 100. For more than that you
                            probably want to use epoll.</para>
                        <note>
                            <title>Sockets</title>
                            <para>Only sockets with SO_BUSY_POLL set will be busy polled. This means
                                you can either selectively set SO_BUSY_POLL on those sockets or set
                                    <emphasis role="italic">net.busy_read</emphasis> globally. This
                                will increase power usage. It is disabled by default (value set to
                                0).</para>
                        </note>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">busy_read</emphasis> represents the low
                            latency busy poll timeout for socket reads. Approximate time in
                            microseconds to busy loop waiting for packets on the device queue. This
                            sets the default value of the SO_BUSY_POLL socket option. Can be set or
                            overridden per socket by setting socket option SO_BUSY_POLL, which is
                            the preferred method of enabling. If you need to enable the feature
                            globally via sysctl, a value of 50 is recommended. This will increase
                            power usage. It is disabled by default (value set to 0).</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">rmem_max</emphasis> represents the maximum
                            receive socket buffer size in bytes.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">wmem_max</emphasis> represents the maximum
                            transmit socket buffer size in bytes.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">rmem_default</emphasis> represents the default
                            setting of the socket receive buffer in bytes.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">wmem_default</emphasis> represents the default
                            setting of the socket transmit buffer in bytes.</para>
                    </listitem>
                </itemizedlist>

                <para>See below a possible configuration comparison for the above parameters across
                different performance profiles.</para>
                
                <table>
                    <title>Networking Stack Tuning - Comparison</title>
                    <tgroup cols="4">
                        <colspec colwidth="2.4*"/>
                        <colspec colwidth="1.4*"/>
                        <colspec colwidth="2.1*"/>
                        <colspec colwidth="2.1*"/>
                        <thead>
                            <row>
                                <entry/>
                                <entry>Balanced</entry>
                                <entry>Higher Throughput</entry>
                                <entry>Lower Latency</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">net.core.netdev_max_backlog</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>1000</para>
                                </entry>
                                <entry>
                                    <para>250,000</para>
                                </entry>
                                <entry>
                                    <para>1000</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">net.core.netdev_budget</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>300</para>
                                </entry>
                                <entry>
                                    <para>600</para>
                                </entry>
                                <entry>
                                    <para>300</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">net.core.somaxconn</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>128</para>
                                </entry>
                                <entry>
                                    <para>4,096</para>
                                </entry>
                                <entry>
                                    <para>128</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">net.core.busy_poll</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>0</para>
                                </entry>
                                <entry>
                                    <para>0</para>
                                </entry>
                                <entry>
                                    <para>50</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">net.core.busy_read</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>0</para>
                                </entry>
                                <entry>
                                    <para>0</para>
                                </entry>
                                <entry>
                                    <para>50</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">net.core.rmem_max</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>212992</para>
                                </entry>
                                <entry>
                                    <para>TOTAL_RAM_MEMORY</para>
                                </entry>
                                <entry>
                                    <para>TOTAL_RAM_MEMORY</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">net.core.wmem_max</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>212992</para>
                                </entry>
                                <entry>
                                    <para>TOTAL_RAM_MEMORY</para>
                                </entry>
                                <entry>
                                    <para>TOTAL_RAM_MEMORY</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">net.core.rmem_default</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>212992</para>
                                </entry>
                                <entry>
                                    <para>67108864</para>
                                </entry>
                                <entry>
                                    <para>67108864</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">net.core.wmem_default</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>212992</para>
                                </entry>
                                <entry>
                                    <para>67108864</para>
                                </entry>
                                <entry>
                                    <para>67108864</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">tcp_fastopen</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>1</para>
                                </entry>
                                <entry>
                                    <para>1</para>
                                </entry>
                                <entry>
                                    <para>1</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">tcp_lowlatency</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>0</para>
                                </entry>
                                <entry>
                                    <para>0</para>
                                </entry>
                                <entry>
                                    <para>1</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">tcp_sack</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>1</para>
                                </entry>
                                <entry>
                                    <para>1</para>
                                </entry>
                                <entry>
                                    <para>1</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">tcp_rmem</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>4096 87380 6291456</para>
                                </entry>
                                <entry>
                                    <para>10240 87380 67108864</para>
                                </entry>
                                <entry>
                                    <para>10240 87380 67108864</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">tcp_wmem</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>4096 87380 6291456</para>
                                </entry>
                                <entry>
                                    <para>10240 87380 67108864</para>
                                </entry>
                                <entry>
                                    <para>10240 87380 67108864</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">ip_local_port_range</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>32768 60999</para>
                                </entry>
                                <entry>
                                    <para>1024 64999</para>
                                </entry>
                                <entry>
                                    <para>32768 60999</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">tcp_max_syn_backlog</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>256</para>
                                </entry>
                                <entry>
                                    <para>8192</para>
                                </entry>
                                <entry>
                                    <para>1024</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">tcp_tw_reuse</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>0</para>
                                </entry>
                                <entry>
                                    <para>0 (1 is better but depends on use case)</para>
                                </entry>
                                <entry>
                                    <para>0 (1 is better but depends on use case)</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">tcp_tw_recycle</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>0</para>
                                </entry>
                                <entry>
                                    <para>0 (1 is better but depends on use case)</para>
                                </entry>
                                <entry>
                                    <para>0 (1 is better but depends on use case)</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">tcp_timestamps</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>1</para>
                                </entry>
                                <entry>
                                    <para>0</para>
                                </entry>
                                <entry>
                                    <para>0</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <emphasis role="italic">tcp_syn_retries</emphasis>
                                    </para>
                                </entry>
                                <entry>
                                    <para>6</para>
                                </entry>
                                <entry>
                                    <para>8</para>
                                </entry>
                                <entry>
                                    <para>5</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>            
                
            </sect3>
        </sect2>
    </sect1>




    <sect1 xml:id="sec.ssh_certificate">

        <title>Connect Via SSH Using Your Certificate</title>

        <para>You have not yet joined the new SUSE Linux Enterprise Server VM to the domain. To do
            so, connect to it via SSH using the details you provided when creating the Azure
            VM.</para>

        <para>When the VM is created, open the VM to see its public IP address.</para>

        <figure>
            <title>Virtual Machine Overview</title>
            <mediaobject>
                <imageobject role="fo">
                    <imagedata fileref="azure-public-ip.png" width="80%" format="PNG"/>
                </imageobject>
                <imageobject role="html">
                    <imagedata fileref="azure-public-ip.png" width="80%" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>

        <note>
            <title>Public IP</title>
            <para>The public IP can change if you restart the Azure virtual machine.</para>
        </note>

        <para>Go to the <quote>Endpoints</quote> property of the VM to see which port to use for
            SSH.</para>

        <figure>
            <title>Virtual Machine Endpoints</title>
            <mediaobject>
                <imageobject role="fo">
                    <imagedata fileref="azure-ssh-port.png" width="80%" format="PNG"/>
                </imageobject>
                <imageobject role="html">
                    <imagedata fileref="azure-ssh-port.png" width="80%" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>

        <para>Now type the following SSH command to access your virtual machine:</para>

        <screen>ssh -i azure_ssh myadmin@52.173.77.97 -p 60252</screen>

        <figure>
            <title>Connect Via SSH</title>
            <mediaobject>
                <imageobject role="fo">
                    <imagedata fileref="azure-ssh.png" width="80%" format="PNG"/>
                </imageobject>
                <imageobject role="html">
                    <imagedata fileref="azure-ssh.png" width="80%" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>
    </sect1>


    <sect1 xml:id="sec.join_sles_yast">

        <title>Domain Join SUSE Linux Enterprise Server Using YaST</title>

        <para>Now that you can access the SUSE Linux Enterprise Server virtual machine, you need to
            join to the domain controller that Azure AD Domain Services provides. Since the VM is in
            the same VNet and you have updated the DNS settings for the VNet, the new Linux machine
            can locate the domain controller by name without any further configuration with the
            command <command>sudo /sbin/yast</command>:</para>

        <screen>myadmin@kirke-suse-aad:~> sudo /sbin/yast</screen>

        <para>This command opens the YaST Control Center. Choose <quote>Network Services</quote> and
                <quote>Windows Domain Membership</quote>.</para>


        <figure>
            <title>YaST Control Center - Overview</title>
            <mediaobject>
                <imageobject role="fo">
                    <imagedata fileref="azure-yast-control.png" width="80%" format="PNG"/>
                </imageobject>
                <imageobject role="html">
                    <imagedata fileref="azure-yast-control.png" width="80%" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>

        <para>You are prompted to install the Samba client packages.</para>

        <figure>
            <title>YaST Control Center - Samba Client Packages</title>
            <mediaobject>
                <imageobject role="fo">
                    <imagedata fileref="azure-samba-client.png" width="80%" format="PNG"/>
                </imageobject>
                <imageobject role="html">
                    <imagedata fileref="azure-samba-client.png" width="80%" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>

        <para>Next, provide your domain as all capital letters, and enable the settings in the top
            section to enable users to SSH to the machine using their credentials from Azure AD. </para>

        <note>
            <title>Custom Domain</title>
            <para>For the example at hand, a cloud-only directory without a custom domain is used.
                If you added and verified a custom domain, and have users from that custom domain in
                your AAD directory from a synchronization, then you should use your custom
                domain.</para>
        </note>

        <figure>
            <title>YaST Control Center - Windows Domain Membership</title>
            <mediaobject>
                <imageobject role="fo">
                    <imagedata fileref="azure-windows-domain-membership.png" width="80%"
                        format="PNG"/>
                </imageobject>
                <imageobject role="html">
                    <imagedata fileref="azure-windows-domain-membership.png" width="80%"
                        format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>

        <note>
            <title>Backspace</title>
            <para>If <quote>Backspace</quote> does not work, use <emphasis role="strong"
                    >CTRL+H</emphasis> to backspace.</para>
        </note>

        <para>When you are done, exit and reboot the VM.</para>

        <note>
            <title>YaST</title>
            <para>If you want to understand in detail what the YaST tool did in the background, read
                the article <quote>How to integrate SUSE Linux Enterprise 11 with Windows Active
                    Directory</quote> at <link
                    xlink:href="https://jreypo.wordpress.com/2012/02/01/how-to-integrate-suse-linux-enterprise-11-with-windows-active-directory/"
                    >https://jreypo.wordpress.com/2012/02/01/how-to-integrate-suse-linux-enterprise-11-with-windows-active-directory/</link>
                />.This article provides a comprehensive look at the files it edited and the values
                it used.</para>
        </note>

        <para>You can now log in using the same credentials that you use to log in to Azure
            AD:</para>

        <screen>ssh blueskyabove\\kirkevans@52.173.77.97 -p 62075</screen>

        <para>Connect via SSH using your credentials from Azure AD. A home directory has been
            created for the user. </para>

        <figure>
            <title>Connect from Azure AD Via SSH</title>
            <mediaobject>
                <imageobject role="fo">
                    <imagedata fileref="azure-ssh-home-directory.png" width="80%" format="PNG"/>
                </imageobject>
                <imageobject role="html">
                    <imagedata fileref="azure-ssh-home-directory.png" width="80%" format="PNG"/>
                </imageobject>
            </mediaobject>
        </figure>

        <para>The user is not contained in the <quote>sudo-ers</quote> group. It is possible to
            enable users from a particular Active Directory group to use <command>sudo</command>.
            For more information regarding this topic, read the article <quote>Adding AD domain
                groups to /etc/sudoers</quote> at <link
                xlink:href="https://derflounder.wordpress.com/2012/12/14/adding-ad-domain-groups-to-etcsudoers/"
                >https://derflounder.wordpress.com/2012/12/14/adding-ad-domain-groups-to-etcsudoers/</link>
            .</para>

    </sect1>




    <sect1 xml:id="sec.more_info">

        <title>More Information</title>

        <para>For more detailed information, have a look at the following articles:</para>

        <itemizedlist>
            <listitem>
                <para>
                    <link
                        xlink:href="https://docs.microsoft.com/en-us/azure/active-directory-domain-services/active-directory-ds-getting-started"
                        >Enable Azure Active Directory Domain Services Using the Azure Portal</link>
                </para>
            </listitem>
            <listitem>
                <para>
                    <link
                        xlink:href="https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
                        >How to create and use an SSH public and private key pair for Linux VMs in
                        Azure</link>
                </para>
            </listitem>
            <listitem>
                <para>
                    <link
                        xlink:href="https://docs.microsoft.com/en-us/azure/active-directory-domain-services/active-directory-ds-admin-guide-join-rhel-linux-vm"
                        >Join a Red Hat Enterprise Linux 7 virtual machine to a managed
                        domain</link>
                </para>
            </listitem>
            <listitem>
                <para>
                    <link
                        xlink:href="https://jreypo.wordpress.com/2012/02/01/how-to-integrate-suse-linux-enterprise-11-with-windows-active-directory/"
                        >How to integrate SUSE Linux Enterprise 11 with Windows Active
                        Directory</link>
                </para>
            </listitem>
            <listitem>
                <para>
                    <link
                        xlink:href="https://derflounder.wordpress.com/2012/12/14/adding-ad-domain-groups-to-etcsudoers/"
                        >Adding AD Domain Groups to /etc/sudoers</link>
                </para>
            </listitem>
        </itemizedlist>

    </sect1>



    <sect1 xml:id="sec.legal_notice">
        <title>Legal Notice</title>
        <para>Copyright &copy;2006– 2017 SUSE LLC and contributors. All rights reserved. </para>
        <para>Permission is granted to copy, distribute and/or modify this document under the terms
            of the GNU Free Documentation License, Version 1.2 or (at your option) version 1.3; with
            the Invariant Section being this copyright notice and license. A copy of the license
            version 1.2 is included in the section entitled <quote>GNU Free Documentation
                License</quote>.</para>
        <para>SUSE, the SUSE logo and YaST are registered trademarks of SUSE LLC in the United
            States and other countries. For SUSE trademarks, see <link
                xlink:href="http://www.suse.com/company/legal/"
                >http://www.suse.com/company/legal/</link>. Linux is a registered trademark of Linus
            Torvalds. All other names or trademarks mentioned in this document may be trademarks or
            registered trademarks of their respective owners.</para>
        <para>This article is part of a series of documents called "SUSE Best Practices". The
            individual documents in the series were contributed voluntarily by SUSE's employees and
            by third parties.</para>
        <para>The articles are intended only to be one example of how a particular action could be
            taken. They should not be understood to be the only action and certainly not to be the
            action recommended by SUSE. Also, SUSE cannot verify either that the actions described
            in the articles do what they claim to do or that they don't have unintended
            consequences.</para>
        <para>Therefore, we need to specifically state that neither SUSE LLC, its affiliates, the
            authors, nor the translators may be held liable for possible errors or the consequences
            thereof. Below we draw your attention to the license under which the articles are
            published.</para>
    </sect1>
    <?pdfpagebreak style="suse2013" formatter="fop"?>
    <xi:include href="license-gfdl.xml"/>
</article>
