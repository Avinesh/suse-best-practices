<?xml version="1.0" encoding="UTF-8"?>
<!--<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>-->
<!DOCTYPE article [
<!ENTITY % entity SYSTEM "entity-decl.ent">
%entity;
]>

<article role="sbp" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="art-sbp-suse-sec-report-21"
 xml:lang="en">

 <info>
  <title>SUSE Solution Security Risk Report 2021</title>
  <productname>All SUSE Products</productname>
  <!--<productnumber>12, 15</productnumber>-->
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:url>https://github.com/SUSE/suse-best-practices/issues</dm:url>
    <dm:product>BSUSE Solution Security Risk Report 2021</dm:product>
   </dm:bugtracker>
   <dm:editurl>https://github.com/SUSE/suse-best-practices/edit/main/xml/</dm:editurl>
  </dm:docmanager>

  <author>
   <personname>
    <firstname>Stoyan</firstname>
    <surname>Manolov, Head of Solution Security, SUSE</surname>
   </personname>
   <!--      <affiliation>
    <jobtitle>Senior Software Engineer</jobtitle>
    <orgname>SUSE</orgname>
    </affiliation>-->
  </author>

  <!--    <cover role="logos">
   <mediaobject>
   <imageobject>
   <imagedata fileref="suse.svg"/>
   </imageobject>
   </mediaobject>
   <mediaobject>
   <imageobject>
   <imagedata fileref="amd.jpg"/>
   </imageobject>
   </mediaobject>
   </cover>-->

  <date>April 08, 2022</date>

  <abstract>

   <para>SUSE Solution Security is committed to delivering best in class software security to its
    customers and to the Open Source community. The primary objectives are to treat software
    security as an ongoing and continual process.</para>

   <para>The SUSE Security Team addresses all aspects of software security on an ongoing basis.
    Software security cannot be thought of as a state you can achieve at a specific point in time.
    Instead, it is a process that must be executed with professional expertise and continuous
    development. This persistent focus is what has given Open Source Software, Linux and SUSE an
    excellent reputation for security.</para>

   <para>The objective of this report is to provide a summary of all security vulnerabilities which
    affected SUSE products in calendar year 2021.</para>

   <para><emphasis role="strong">Disclaimer</emphasis>: This document is part of the SUSE Best
    Practices series. All documents published in this series were contributed voluntarily by SUSE
    employees and by third parties. If not stated otherwise inside the document, the articles are
    intended only to be one example of how a particular action could be taken. Also, SUSE cannot
    verify either that the actions described in the articles do what they claim to do or that they
    do not have unintended consequences. All information found in this document has been compiled
    with utmost attention to detail. However, this does not guarantee complete accuracy. Therefore,
    we need to specifically state that neither SUSE LLC, its affiliates, the authors, nor the
    translators may be held liable for possible errors or the consequences thereof. </para>

  </abstract>
 </info>

 <sect1>
  <title xml:id="sec-motivation">Motivation</title>

  <para>SUSE Solution Security is committed to delivering best in class software security to its
   customers and to the Open Source community.</para>

  <para> The primary objectives are to treat software security as an ongoing and continual process.
   This implies to</para>

  <itemizedlist>
   <listitem>
    <para>promptly react to security incidents and deliver premium quality security updates.</para>
   </listitem>
   <listitem>
    <para>continuously improve the security related functionality in SUSE products.</para>
   </listitem>
   <listitem>
    <para>continuously contribute to the rapidly growing maturity of Open Source Software.</para>
   </listitem>
   <listitem>
    <para>respect the Open Source Software security principles of openness, transparency and
     traceability.</para>
   </listitem>
  </itemizedlist>

  <para>At the same time, any software can also contain errors (both deliberate and accidental)
   which could affect the system's security, including design flaws, programming errors, and
   backdoors.</para>

  <para>The SUSE Security Team addresses all of these aspects of software security on an ongoing
   basis. Software security cannot be thought of as a state you can achieve at a specific point in
   time. Instead, it is a process that must be executed with professional expertise and continuous
   development. This persistent focus is what has given Open Source Software, Linux and SUSE such an
   excellent reputation for security.</para>

 </sect1>

 <sect1>
  <title xml:id="sec-background">Background</title>

  <para>Software provides security features (such as authentication methods, encryption, intrusion
   prevention and detection, backup and others), but it also contains errors (such as design flaws,
   programming errors, and even backdoors) that often turn out to be relevant for the system's
   security. The SUSE Security Team's task is to addresses all of these aspects of software
   security, with the understanding that security in software is a challenge that never ends.
   Software security cannot be understood a state taken at some certain point in time; it is a
   process that must be filled with professional expertise and permanent development, both on
   software and on skills. The resulting evolution is what has given Open Source Software, Linux and
   SUSE its excellent reputation for security.</para>

  <para>A modern Linux Operating System such as the SUSE Linux Enterprise Server for enterprise use
   or the openSUSE community distribution for home use feature a rich set of security programs and
   functions that range from access controls, intrusion prevention and detection, flexible and
   trustworthy authentication mechanisms, encryption for files and network connections, file
   integrity checking utilities, network analysis tools and monitoring/logging utilities for your
   system. To complement this, there are advanced tools that help you to securely configure and
   administer your system, and to securely download and install update packages. These utilities are
   standard in SUSE products. The update packages fix security bugs that have been found after your
   product has been made. The security features of your Linux system are waiting for you to explore
   them. SUSE encourages our customers to take advantage of them to further improve the level of
   privacy and security that is built into every system already by default. </para>

  <para>Programs are usually written by humans, and humans make mistakes. By consequence, all
   software contains errors. Some of these errors appear as instabilities (the software or the
   entire system crashes), while others may not have any apparent, visible effect. However, some
   software errors may introduce a security risk. A local or a remote attacker may be able to feed
   specially drafted data to the software which takes advantage of the programming error (in the
   case of a remotely exploitable bug, the data comes from an attached network device, such as a
   cable or DSL modem, or a wireless network interface card). The application then either crashes,
   resulting in a Denial of Service (DoS) attack, or it executes code that originates from the
   attacker, transferring control over the execution context from what the programmer intended to
   what the attacker has in mind for the exploitation of the error. Depending on the software's
   function, the resulting security breach can impose little or high security risks for your data
   and your system, potentially giving an attacker the opportunity to delete, alter or even steal
   your data, or use the system for his own purposes.</para>

  <para>Our SUSE Solution Security team is responsible for handling all SUSE product-related
   security incidents. In that team, clear and well-defined roles are assigned for tracking new
   incidents and coordinating needed updates. The team works together with all SUSE engineering
   software specialists.</para>

  <para>We use multiple sources to understand security incidents. These sources include the Mitre
   and NVD CVE databases, various security mailing lists (OSS security, Linux distros, distros,
   bugtraq, and full-disclosure), direct reports, and other Linux vendors databases. We are also
   part of various pre-notification mailing lists for software components, like XEN, Samba, X.ORG.
   Confidential pre-notifications about vulnerabilities will be treated according to established
   responsible disclosure procedures.</para>


  <!--
  <itemizedlist>
   <listitem>
    <para>the upstream developer</para>
   </listitem>
   <listitem>
    <para>the distribution developer</para>
   </listitem>
   <listitem>
    <para>the (end) user</para>
   </listitem>
  </itemizedlist>-->


 </sect1>

 <sect1 xml:id="sec-incident-rating-tracking">
  <title>Incident rating and tracking</title>

  <para>We rate the severity of incidents with two different systems, a simplified rating system and
   the CVSS v3.1 scoring system. The Common Vulnerability Scoring System (CVSS) is an open framework
   for communicating the characteristics and severity of software vulnerabilities. It's being
   developed by the US-based non-profit organization FIRST.org and its main goal is to assign the
   right score to a vulnerability to help security administrators prioritize responses and resources
   to specific threats. CVSS v3.1 scoring consists of three metric groups: Base, Temporal, and
   Environmental. The Base group represents the intrinsic qualities of a vulnerability that are
   constant over time and across user environments, the Temporal group reflects the characteristics
   of a vulnerability that change over time, and the Environmental group represents the
   characteristics of a vulnerability that are unique to a user's environment. The Base metrics
   produce a score ranging from 0 to 10, which can then be modified by scoring the Temporal and
   Environmental metrics. A CVSS score is also represented as a vector string, a compressed textual
   representation of the values used to derive the score. Today, SUSE uses the Base score
   methodology to evaluate vulnerabilities throughout the support lifecycle of our products. SUSE
   keeps the right to adjust the final score of the vulnerability as more details become known and
   available throughout the analsys. The most current CVSS resources can be found at
   https://www.first.org/cvss/. The CVSS v3.1 calculator used by SUSE could be found at
   https://www.first.org/cvss/calculator/3.1. The framework is measuring the severity of a given
   vulnerability, not the associated risk alone. The scoring of any vulnerability may vary with
   different analysts hence the final score could be slightly different between vendors impacted by
   that vulnerability. For a more accurate assessment of the impact, vendors and application owners
   must always consider factors outside of CVSS such as exposure or threat.</para>

  <para> The security incidents are tracked in our own workflow system, technical details are
   tracked in the SUSE bug-tracking system, and the updated software package is built, processed,
   and published by our internal "Open Build System" Internal SLAs corresponding to the severity
   rating are monitored and reviewed regularly. Our packagers backport the required security fixes
   to our version of the software. To protect the stability of our customer setups, we only rarely
   do minor version upgrades. After receiving fixes for the affected software, four eye reviews
   cross-check the source patches. A number of automated checks verify source and binary
   compatibility and the completeness of patch meta information as well as whether patches can be
   installed without problems. Dedicated QA teams provide integration, bugfix, and regression
   testing for all updates before they are released to our customers. After the release of an
   update, automated processes publish the updates, update notices, and cross reference information
   on our CVE index pages and machine-readable OVAL and CVRF XML information.</para>

  <para>The objective of this report is to provide a summary of all security vulnerabilities which
   affected SUSE products in calendar year 2021. We will go into details on the high impact
   vulnerabilities which affected our products in 2021 and elaborate on how we responded to these
   incidents. For a better understanding of our classification mechanisms, we have described our
   rating system along with the equivalency of each rating to the CVSS v3.1 scoring
   calculator:</para>


  <table>
   <title>Incident rating and CVSS score</title>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>Rating</entry>
      <entry>CVSS Score</entry>
      <entry>Definition</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>Critical</entry>
      <entry>9.0 and above</entry>
      <entry>This rating is given to flaws that could be easily exploited by a remote
       unauthenticated attacker and lead to system compromise (arbitrary code execution) without
       requiring user interaction. These are the types of vulnerabilities that can be exploited by
       worms. Flaws that require an authenticated remote user, a local user, or an unlikely
       configuration are not classed as critical impact</entry>
     </row>
     <row>
      <entry>Important</entry>
      <entry>7.0 to 8.9</entry>
      <entry>This rating is given to flaws that can easily compromise the confidentiality,
       integrity, or availability of resources. These are the types of vulnerabilities that allow
       local users to gain privileges, allow unauthenticated remote users to view resources that
       should otherwise be protected by authentication, allow authenticated remote users to execute
       arbitrary code, or allow remote unauthenticated users to cause a denial of service without
       user interaction.</entry>
     </row>
     <row>
      <entry>Moderate </entry>
      <entry>4.0 to 6.9</entry>
      <entry>This rating is given to flaws that may be more difficult to Copyright © SUSE 2022 5
       exploit but could still lead to some compromise of the confidentiality, integrity, or
       availability of resources, under certain circumstances. These are the types of
       vulnerabilities that could have had a critical impact or important impact but are less easily
       exploited based on a technical evaluation of the flaw, or affect unlikely configurations.
       Local, persistent (service needs to be restarted) denial of service conditions for basic
       system services (kernel, systemd, polkit, dbus, etc.) with and without user interaction
       should also be rated <quote>moderate</quote>.</entry>
     </row>
     <row>
      <entry>Low </entry>
      <entry>up to 3.9 </entry>
      <entry>This rating is given to all other issues that have a security impact. These are the
       types of vulnerabilities that are believed to require unlikely circumstances to be able to be
       exploited, or where a successful exploit would give minimal consequences.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 xml:id="sec-prefer-upgrades-over-backports">
  <title>When to prefer version upgrades over backports</title>

  <para> It is a general policy rule that no new upstream versions of a package are introduced into
   our enterprise products. This rule is not an absolute rule however. For certain types of
   packages, in particular anti-virus software, security concerns weigh heavier than the
   conservative approach that is preferable from the perspective of quality assurance. For packages
   in that class, occasionally newer versions are introduced into a released version of an
   enterprise product line. </para>

  <para> Sometimes also for other types of packages the choice is made to introduce a new version
   rather than a backport. This is done when producing a backport is not economically feasible or
   when there is a very relevant technical reason to introduce the newer version. </para>
 </sect1>


 <sect1 xml:id="sec-security-vulnerabilities">
  <title>Major security vulnerabilities in 2021</title>

  <sect2 xml:id="sec-log4shell">
   <title>Log4Shell</title>

   <bridgehead>Overview</bridgehead>
   <para> On Friday, December 10th 2021, a new vulnerability in “log4j” Java logging framework was
    reported, which could be trivially exploited. The 0-day exploit in the log4j Java logging
    framework was found by Chen Zhaojun of Alibaba Cloud Security Team, which allowed remote
    attackers able to inject strings into log4j based Java logging to execute code by exploiting the
    default enabled JNDI bindings. This is possible without any preconditions, making it critical.
    This vulnerability is caused by a new feature introduced in log4j 2.x versions where a specific
    string embedded in messages logged by log4j would be interpreted as Java code.</para>

   <para>The vulnerability, also called <quote>log4shell</quote> does not impact SUSE Linux
    Enterprise products directly as these are still shipping an older version of log4j that is not
    affected by this bug. </para>

   <para>SUSE Rancher is not affected by this vulnerability. The Helm chart for Istio 1.5, provided
    by Rancher and which is currently deprecated, includes Zipkin and is vulnerable to Log4j.
    Customers are advised to upgrade to the recent Istio version provided in Cluster Explorer, which
    does not uses Zipkin and is not affect to the vulnerability.</para>

   <para>The vulnerability does not affect SUSE Manager, as it is using at most log4j 1.2.x, which
    is not affected.. One component of SUSE OpenStack Cloud (“storm”) embeds log4j 2.x, which
    immediately received the required update. SUSE NeuVector product is not affected by this
    vulnerability, but in its security scanner functionality has now added support for scanning your
    containers, see the NeuVector log4j2 page.</para>

   <para>A much less severe similar vulnerability was discovered in older log4j 1.2.x versions via
    the JMS interface. This JMS functionality is not default enabled, administrators must have
    enabled it. SUSE has also published updates for log4j 1.2 versions disabling the JMS
    functionality completely.</para>

   <para>For the log4j 1.2.x packages, SUSE is already fixing security issues in these packages,
    even though upstream has declared them End-of-Life. In parallel, SUSE will ship log4j 2.x
    versions where possible so customers can migrate to the newer log4j major release.</para>

   <bridgehead>Solution</bridgehead>

   <para>SUSE considers log4j versions 2.0 and newer as affected, log4j 1.2.x does not have the same
    critical vulnerability and is not considered affected by this CVE.</para>

   <itemizedlist>
    <listitem>
     <para> SUSE Openstack Cloud embeds log4j2 in the "storm" component, which received updates
      within 5 days of the initial vulnerability announcement. SUSE customers are advised to get the
      release security update for the mitigation of this vulnerability.</para>
    </listitem>
    <listitem>
     <para>SUSE Linux Enterprise products do not ship log4j 2.x.</para>
    </listitem>
    <listitem>
     <para>SUSE Manager does not ship log4j 2.x.</para>
    </listitem>
    <listitem>
     <para>SUSE Enterprise Storage does not ship log4j 2.x.</para>
    </listitem>
    <listitem>
     <para>SUSE NeuVector product does not ship log4j 2.x</para>
    </listitem>
   </itemizedlist>

   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para> SUSE CVE page for CVE-2021-44228 https://www.suse.com/security/cve/CVE-2021-
      44228.html</para>
    </listitem>
    <listitem>
     <para>SUSE CVE Page for CVE-2021-45046 https://www.suse.com/security/cve/CVE-2021-
      45046.html</para>
    </listitem>
    <listitem>
     <para>SUSE CVE Page for CVE-2021-4104 (log4j 1.2)
      https://www.suse.com/security/cve/CVE-2021-4104.html</para>
    </listitem>
    <listitem>
     <para>log4j security advisory https://logging.apache.org/log4j/2.x/security.html</para>
    </listitem>
    <listitem>
     <para>SUSE TID 000020526 https://www.suse.com/support/kb/doc/?id=000020526</para>
    </listitem>

    <listitem>
     <para>NeuVector page on log4j2 scanning addition
      https://blog.neuvector.com/article/apache-log4j-2-cve-2021-44228</para>
    </listitem>
    <listitem>
     <para>US CISA guidance on log4j
      https://www.cisa.gov/uscert/apache-log4jvulnerability-guidance</para>
    </listitem>
    <listitem>
     <para>BSI notification about log4j (PDF)
      https://www.bsi.bund.de/SharedDocs/Cybersicherheitswarnungen/DE/2021/2021-
      549032-10F2.pdf?__blob=publicationFile&amp;v=3</para>
    </listitem>
   </itemizedlist>


  </sect2>

 

 </sect1>

 <!-- <?pdfpagebreak style="suse2013-sbp" formatter="fop"?>-->

 <sect1 xml:id="sec-legal-notice">
  <title>Legal notice</title>

  <para>Copyright &copy;2006–2021 SUSE LLC and contributors. All rights reserved. </para>

  <para>Permission is granted to copy, distribute and/or modify this document under the terms of the
   GNU Free Documentation License, Version 1.2 or (at your option) version 1.3; with the Invariant
   Section being this copyright notice and license. A copy of the license version 1.2 is included in
   the section entitled <quote>GNU Free Documentation License</quote>.</para>

  <para>SUSE, the SUSE logo and YaST are registered trademarks of SUSE LLC in the United States and
   other countries. For SUSE trademarks, see <link xlink:href="http://www.suse.com/company/legal/"
    >http://www.suse.com/company/legal/</link>. Linux is a registered trademark of Linus Torvalds.
   All other names or trademarks mentioned in this document may be trademarks or registered
   trademarks of their respective owners.</para>

  <para>This article is part of a series of documents called <quote>SUSE Best Practices</quote>. The
   individual documents in the series were contributed voluntarily by SUSE's employees and by third
   parties.</para>

  <para>The articles are intended only to be one example of how a particular action could be taken.
   They should not be understood to be the only action and certainly not to be the action
   recommended by SUSE. Also, SUSE cannot verify either that the actions described in the articles
   do what they claim to do or that they do not have unintended consequences.</para>

  <para> All information found in this article has been compiled with utmost attention to detail.
   However, this does not guarantee complete accuracy.
   <!--Neither SUSE LLC, the authors, nor the translators shall be held liable
   for possible errors or the consequences thereof. --></para>

  <para>Therefore, we need to specifically state that neither SUSE LLC, its affiliates, the authors,
   nor the translators may be held liable for possible errors or the consequences thereof. Below we
   draw your attention to the license under which the articles are published.</para>

 </sect1>

 <?pdfpagebreak style="suse2013-sbp" formatter="fop"?>
 <xi:include href="license-gfdl.xml"/>


</article>
